<configuration>
	<dduetools>
		<!-- This is the legacy format for defining the platform version and the path to the framework assemblies.
				 The version attribute should be 1.0 for .NET 1.0, 1.1 for .NET 1.1 or 2.0 for all other .NET versions.
				 The path attribute should point to the location of the framework assemblies.  Although it works, this
				 does not provide proper support for other framework versions such as Silverlight.  Use the new format
				 below for better support of other framework types.  This format is used for backward compatibility
				 by default.  It is suggested that you switch to the new format below in your own projects. -->
		<platform version="2.0" path="%SystemRoot%\Microsoft.NET\Framework\v4.0.30319\" />

		<!-- This is the new format for defining platform type and version information for use in generating
				 reflection information that is accurate for the selected framework type.  The framework and version
				 attribute values correspond to one of the framework sets defined in the Frameworks.xml file.  Using
				 this method allows for automatic referencing of core framework assemblies as well as automatic
				 binding redirection from older versions to the defined version for all assemblies in the framework's
				 assembly set (i.e. automatically redirecting the RIA SDK dependencies from the Silverlight 4 versions to
				 the Silverlight 5 versions when producing information for a Silverlight 5 project that uses the RIA SDK). -->
		<!-- platform framework=".NETFramework" version="4.0.30319" / -->

		<resolver type="Microsoft.Ddue.Tools.Reflection.AssemblyResolver" assembly="%DXROOT%\ProductionTools\MRefBuilder.exe" use-gac="false">
			<!-- Add an assemblyBinding element to define binding redirects.  The dependentAssembly elements can
			specify that redirects should be imported from an application or web config file, a redirect for
			a range of versions, or a redirect for a single version.  Examples are shown below. -->
			<!--
			<assemblyBinding>
				<dependentAssembly importFrom=".\Web.config" />

				<dependentAssembly>
					<assemblyIdentity name="NationalInstruments.Common" publicKeyToken="4544464cdeaab541" />
					<bindingRedirect oldVersion="1.0.0.0-8.1.20.168" newVersion="8.1.20.237" />
				</dependentAssembly>

				<dependentAssembly>
					<assemblyIdentity name="MyCompany.Util.ComponentFactory" publicKeyToken="E1458197622051B1"
						culture="neutral"/>
					<bindingRedirect oldVersion="1.2.3.4" newVersion="2.1.4.3"/>
				</dependentAssembly>
			</assemblyBinding>
			-->
			<!-- Add this element to ignore assemblies if they cannot be resolved and you do not have a copy
			     of the assembly (i.e. the Crystal Reports BusinessObjects.Licensing.KeycodeDecoder assembly. -->
			<ignoreIfUnresolved>
				<assemblyIdentity name="BusinessObjects.Licensing.KeycodeDecoder" />
			</ignoreIfUnresolved>
		</resolver>
		<!--
    <namer type="Microsoft.Ddue.Tools.Reflection.OrcasNamer" assembly="%DXROOT%\ProductionTools\MRefBuilder.exe" />
    -->
		<addins>
			<addin type="Microsoft.Ddue.Tools.XamlAttachedMembersAddIn" assembly="%DXROOT%\ProductionTools\MRefBuilder.exe" />
			<addin type="Microsoft.Ddue.Tools.ExtensionMethodAddIn" assembly="%DXROOT%\ProductionTools\MRefBuilder.exe" />
		</addins>

		<!-- Whether to include protected sealed members.  Defaulted to true to
         match the behavior of prior versions. -->
		<protectedSealed expose="true" />

		<!-- Whether to include "no-PIA" COM types, those marked with
         TypeIdentifierAttribute and CompilerGeneratedAttribute.  Since they
         are compiler generated, we'll always exclude them for now. -->
		<noPIA expose="false" />

		<!--
    <apiFilter expose="true">
      <namespace name="System" expose="true">
        <type name="Object" expose="false">
          <member name="ToString" expose="true" />
        </type>
      </namespace>
    </apiFilter>
    -->
		<attributeFilter expose="true">
			<!-- Most attributes in System.ComponentModel control designer behavior. Don't show them. -->
			<!-- The exceptions are attributes relating to data binding. Do show them. -->
			<namespace name="System.ComponentModel" expose="false">
				<type name="BindableAttribute" expose="true"/>
				<type name="BrowsableAttribute" expose="true"/>
				<type name="ComplexBindingPropertiesAttribute" expose="true"/>
				<type name="DataObjectAttribute" expose="true"/>
				<type name="DefaultBindingPropertyAttribute" expose="true"/>
				<type name="ListBindableAttribute" expose="true"/>
				<type name="LookupBindingPropertiesAttribute" expose="true"/>
				<type name="SettingsBindableAttribute" expose="true"/>
				<type name="TypeConverterAttribute" expose="true"/>
				<!-- These may provide useful information too -->
				<type name="DefaultEventAttribute" expose="true"/>
				<type name="DefaultPropertyAttribute" expose="true"/>
				<type name="DefaultValueAttribute" expose="true"/>
				<type name="DesignerSerializationVisibilityAttribute" expose="true"/>
				<type name="EditorAttribute" expose="true"/>
				<type name="EditorBrowsableAttribute" expose="true"/>
				<type name="ExtenderProvidedProperty" expose="true"/>
				<type name="ProvideProperty" expose="true"/>
			</namespace>
			<namespace name="System.ComponentModel.Design" expose="false" />
			<namespace name="System.ComponentModel.Design.Serialization" expose="false" />
			<!-- Most attributes in System.Diagnostics control debugger behavior. Don't show them. -->
			<namespace name="System.Diagnostics" expose="false">
				<type name="ConditionalAttribute" expose="true"/>
				<type name="EventLogPermissionAttribute" expose="true"/>
				<type name="PerformanceCounterPermissionAttribute" expose="true"/>
			</namespace>
			<!-- Attributes in System.Diagnostics.CodeAnalysis control interaction with FxCop. Don't show them. -->
			<namespace name="System.Diagnostics.CodeAnalysis" expose="false" />
			<!-- Attributes in System.EnterpriseServices control obscure details of COM+ interop. Don't show them. -->
			<namespace name="System.EnterpriseServices" expose="false" />
			<!-- The DefaultMember attribute is usually compiler-generated. Users will see it from the member syntax. -->
			<namespace name="System.Reflection" expose="true">
				<type name="DefaultMemberAttribute" expose="false" />
			</namespace>
			<!-- Attributes in System.Runtime and System.Runtime.CompilerServices control obscure details of compilation. Don't show them. -->
			<namespace name="System.Runtime" expose="false" />
			<namespace name="System.Runtime.CompilerServices" expose="false">
				<!-- This one is needed to document extension methods properly -->
				<type name="ExtensionAttribute" expose="true" />
				<!-- This one is needed to document fixed buffers properly -->
				<type name="FixedBufferAttribute" expose="true" />
				<!-- This one may provide useful information -->
				<type name="UnsafeValueTypeAttribute" expose="true" />
			</namespace>
			<!-- Attributes in System.Runtime.ConstrainedExecution control obscure details of compilation. Don't show them. -->
			<namespace name="System.Runtime.ConstrainedExecution" expose="false" />
			<!-- Most attributes in System.Runtime.InteropServices control obscure details of COM interop. Don't show them. -->
			<namespace name="System.Runtime.InteropServices" expose="false">
				<!-- However, these may prove useful. -->
				<type name="ClassInterfaceAttribute" expose="true"/>
				<type name="ComImportAttribute" expose="true"/>
				<type name="ComVisibleAttribute" expose="true"/>
				<type name="DllImportAttribute" expose="true"/>
				<type name="FieldOffsetAttribute" expose="true"/>
				<type name="GuidAttribute" expose="true"/>
				<type name="InterfaceTypeAttribute" expose="true"/>
				<type name="PreserveSigAttribute" expose="true"/>
				<type name="StructLayoutAttribute" expose="true"/>
				<!-- This one is needed to document optional parameters properly -->
				<type name="OptionalAttribute" expose="true" />
			</namespace>
			<!-- Attributes in System.Runtime.Versioning control details of resource loading. Don't show them. -->
			<namespace name="System.Runtime.Versioning" expose="false" />
			<!-- Attributes in System.Security might hint as security implementation details. Don't show them. -->
			<namespace name="System.Security" expose="false">
				<type name="SecurityCriticalAttribute" expose="true" />
				<type name="SecurityTreatAsSafeAttribute" expose="true" />
				<type name="AllowPartiallyTrustedCallersAttribute" expose="true" />
			</namespace>
			<!-- Attributes in System.Web.Compilation control interaction with the Expression designer. Don't show them. -->
			<namespace name="System.Web.Compilation" expose="false" />
			<!-- The ASP.NET team only wants these attributes exposed from their namespace. Their logic ecscapes me, but here it is. -->
			<namespace name="System.Web.UI" expose="false">
				<type name="ControlValuePropertyAttribute" expose="true"/>
				<type name="PersistenceModeAttribute" expose="true" />
				<type name="ValidationPropertyAttribute" expose="true"/>
				<type name="WebResourceAttribute" expose="true"/>
				<type name="TemplateContainerAttribute" expose="true"/>
				<type name="ThemeableAttribute" expose="true"/>
				<type name="TemplateInstanceAttribute" expose="true"/>
			</namespace>
			<!-- Don't show attributes related to XAML serialization details. -->
			<namespace name="System.Windows.Markup" expose="true">
				<type name="ConstructorArgumentAttribute" expose="false" />
				<type name="DependsOnAttribute" expose="false" />
				<type name="DesignerSerializationOptionsAttribute" expose="false" />
				<type name="ValueSerializerAttribute" expose="false" />
				<type name="XmlnsCompatibleWithAttribute" expose="false" />
				<type name="XmlnsDefinitionAttribute" expose="false" />
				<type name="XmlnsPrefixAttribute" expose="false" />
			</namespace>
			<!-- Attributes in System.Xml.Serialization control obscure details of XML serialization. Don't show them.-->
			<!-- namespace name="System.Xml.Serialization" expose="false" / -->
			<!-- The GeneratedCodeAttribute is useful only to tools, and should be hidden from end users.-->
			<namespace name="System.CodeDom.Compiler" expose="true">
				<type name="GeneratedCodeAttribute" expose="false" />
			</namespace>
		</attributeFilter>
	</dduetools>
</configuration>
