<?xml version="1.0" encoding="utf-8"?>
<topic id="81f38cdc-8859-441b-a249-b67b03e492ed" revisionNumber="1">
	<developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

		<introduction>
			<para>This topic walks you through cloning an existing Sandcastle presentation style to create a custom
version for use with the Sandcastle Help File Builder.</para>
		</introduction>
		
		<procedure>
			<title>Custom Presentation Style Walkthrough</title>
			<steps class="ordered">
				<step>
					<content>
						<para>The help file builder looks for custom presentation styles in the
<localUri>.\Presentation Styles</localUri> folder or a subfolder beneath it in the help file
builder's <legacyBold>Common Application Data</legacyBold> folder.  Its location varies by operating system.
See the <link xlink:href="a24489fb-45d6-46f4-9eaa-9a9c4e0919b2#PresentationStyles" /> topic for the location of
this folder.  As noted in the topic, you may need to create the parent folders if they do not already exist.  An
example of the full path on a system using Windows Vista or later would be
<localUri>%ProgramData%\EWSoftware\Sandcastle Help File Builder\Presentation Styles</localUri>.
					</para>
					</content>
				</step>

				<step>
					<content>
						<para>Within the presentation styles folder, create a new folder for your custom presentation style.
For this example, it will be <localUri>.\CustomVS2005Style</localUri> to match the style's new ID although it
does not have to.  All of the content and configuration files for your custom presentation style will go into
this folder.</para>
					</content>
				</step>

				<step>
					<content>
						<para>In this example, we will clone the existing <codeInline>VS2005</codeInline> presentation style.
To do so, copy the content from the Sandcastle VS2005 presentation style folder
(<localUri>%ProgramFiles (x86)%\Sandcastle\Presentation\VS2005\</localUri>) to your new custom presentation style
folder.</para>
					</content>
				</step>

				<step>
					<content>
						<para>Create a subfolder beneath your new custom presentation style folder called
<localUri>.\SharedContent</localUri>.  This is used to hold copies of the Sandcastle Help File Builder shared
content files that are specific to the presentation style.  These will be copied from the Sandcastle Help File
Builder's templates folder (typically <localUri>%SHFBROOT%\SharedContent</localUri>.  Copy only the VS2005
related files (VS2005*.*) but rename them to use the presentation style ID for the new custom presentation style.
In this case, the files would be copied from VS2005*.* to CustomVS2005Style*.*.
					</para>
					</content>
				</step>

				<step>
					<content>
						<para>In order to use the presentation style, a definition file must be created.  The definition file
contains the information needed to find and use the presentation style.  The filename can be anything you like but
it must have an extension of <localUri>.presentation</localUri>.  The example for this walkthrough is shown
below.  For information about the elements and what they do, see the <link xlink:href="baf1dcbc-e9cf-4d71-a770-621e6eaf10a7" />
topic.</para>

						<alert class="important">
							<para>Be sure to give your custom presentation style a unique ID.  Duplicate presentation style
IDs are not allowed.</para>
						</alert>

						<para>If you only want to modify the resource items or XSL transformations, you can use the default
<application>BuildAssembler</application> configuration files supplied with the Sandcastle Help File Builder.
In order to do that, you can point the path attributes for the <codeInline>ConceptualBuildConfiguration</codeInline>
and <codeInline>ReferenceBuildConfiguration</codeInline> elements at the help file builder template files
(<localUri>%SHFBROOT%\Templates\Conceptual.config</localUri> and <localUri>%SHFBROOT%\Templates\VS2005.config</localUri>
respectively for this walkthrough).</para>

						<para>If you want to alter the <application>BuildAssembler</application> configuration files, you can
copy them to the <localUri>.\Configurations</localUri> subfolder of your custom presentation style folder and
update the presentation style configuration file to point to the custom versions.  The example below shows an
example of using two custom configuration files for the <application>BuildAssembler</application> configuration
elements.</para>
					</content>
				</step>

			</steps>

			<conclusion>
				<content>
					<para>Once the above steps have been performed, close the Sandcastle Help File Builder if it is open
and restart it so that it can pick up the new presentation style.  Go to the <ui>Help File</ui> category in the
Project Properties window and use the <ui>Presentation Style</ui> combo box to select it.  You can then perform
a build to see if it works.</para>
				</content>
			</conclusion>
		</procedure>

		<section address="ExampleConfig">
			<title>Example Configuration File</title>
			<content>
				<para>This is an example configuration file that can be used for the above walkthrough.</para>

<code language="xml" title="Example Presentation Style Configuration File">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;PresentationStyles&gt;
	&lt;PresentationStyle ID="CustomVS2005Style" Title="My Custom VS2005 Style"
	  BasePath="CustomVS2005Style"&gt;

		&lt;Description&gt;This is my custom presentation style.&lt;/Description&gt;

		&lt;SupportedFormats&gt;
			&lt;Format Type="HtmlHelp1" /&gt;
			&lt;Format Type="MSHelp2" /&gt;
			&lt;Format Type="MSHelpViewer" /&gt;
			&lt;Format Type="Website" /&gt;
		&lt;/SupportedFormats&gt;

		&lt;HelpContent&gt;
			&lt;Files Source="icons\*.*" Destination="icons" /&gt;
			&lt;Files Source="scripts\*.*" /&gt;
			&lt;Files Source="styles\*.*" /&gt;
		&lt;/HelpContent&gt;

		&lt;ResourceItems Path="Content"&gt;
			&lt;ToolResourceItems Path="SharedContent" /&gt;
		&lt;/ResourceItems&gt;

		&lt;DocumentModelTransformation File="%SHFBROOT%\ProductionTransforms\ApplyVSDocModel.xsl"&gt;
			&lt;Parameter Name="IncludeAllMembersTopic" Value="true" /&gt;
			&lt;Parameter Name="IncludeInheritedOverloadTopics" Value="false" /&gt;
			&lt;Parameter Name="project" Value="{@ProjectNodeIDOptional}" /&gt;
		&lt;/DocumentModelTransformation&gt;

		&lt;IntermediateTOCTransformation File="%SHFBROOT%\ProductionTransforms\CreateVSToc.xsl" /&gt;

		&lt;!-- NOTE: This example assumes you have made a copy of the SHFB configuration file.
		    If not, change the path too "%SHFBROOT%\Templates\Conceptual.config" --&gt;
		&lt;ConceptualBuildConfiguration File="Configuration\CustomConceptualBuild.config" /&gt;

		&lt;!-- NOTE: This example assumes you have made a copy of the SHFB configuration file.
		    If not, change the path too "%SHFBROOT%\Templates\VS2005.config" --&gt;
		&lt;ReferenceBuildConfiguration File="Configuration\CustomAPIBuild.config" /&gt;

		&lt;TransformComponentArguments&gt;
			&lt;Argument Key="logoFile" ForConceptualBuild="true"
					ForReferenceBuild="true" Value=""
					Description="An optional logo file to insert into the topic headers.
Specify the filename only, omit the path.  Place the file in your project in an Icons\
folder and set the Build Action to Content.  If blank, no logo will appear in the topic
headers."/&gt;
			&lt;Argument Key="logoHeight" ForConceptualBuild="true"
					ForReferenceBuild="true" Value=""
					Description="An optional logo height.  If left blank, the actual logo
image height is used."/&gt;
			&lt;Argument Key="logoWidth" ForConceptualBuild="true"
					ForReferenceBuild="true" Value=""
					Description="An optional logo width.  If left blank, the actual logo
image width is used."/&gt;
			&lt;Argument Key="logoAltText" ForConceptualBuild="true"
					ForReferenceBuild="true" Value=""
					Description="Optional logo alternate text.  If left blank, no alternate
text is added."/&gt;
			&lt;Argument Key="logoPlacement" ForConceptualBuild="true"
					ForReferenceBuild="true" Value="left"
					Description="An optional logo placement.  Specify left, right, or above.
If not specified, the default is left."/&gt;
			&lt;Argument Key="logoAlignment" ForConceptualBuild="true"
					ForReferenceBuild="true" Value="left"
					Description="An optional logo alignment when using the &#39;above&#39;
placement option.  Specify left, right, or center.  If not specified, the default is left."/&gt;
			&lt;Argument Key="complexParameter" ForConceptualBuild="false"
					ForReferenceBuild="true"
					Description="An example argument containing XML content"&gt;
				&lt;extraInfo name="intValue" value="1" /&gt;
				&lt;extraInfo name="stringValue" value="XYZ" /&gt;
			&lt;/Argument&gt;
		&lt;/TransformComponentArguments&gt;
	&lt;/PresentationStyle&gt;
&lt;/PresentationStyles&gt;
</code>
			</content>
		</section>
		
		<relatedTopics>
			<link xlink:href="baf1dcbc-e9cf-4d71-a770-621e6eaf10a7" />
		</relatedTopics>
	</developerWalkthroughDocument>
</topic>
