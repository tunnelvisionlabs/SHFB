<?xml version="1.0" encoding="utf-8"?>
<topic id="baf1dcbc-e9cf-4d71-a770-621e6eaf10a7" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>Sandcastle comes with some standard presentation styles.  Rather than make changes directly to the
Sandcastle presentation styles, you can clone them to create modified versions for yourself.  In addition, you
can create entirely new presentation styles.  The help file builder supports custom presentation styles and will
make them available via the <codeInline>Presentation Style</codeInline> property.</para>

			<autoOutline lead="none">1</autoOutline>

			<para>See the <link xlink:href="81f38cdc-8859-441b-a249-b67b03e492ed">custom presentation style walkthrough</link>
for more information on creating a custom presentation style.</para>
		</introduction>

		<section address="ConfigFile">
			<title>Presentation Style Configuration File</title>
			<content>
				<para>To be found and used, the custom presentation styles must be described using a configuration file
located in the <localUri>.\Presentation Styles</localUri> folder or a subfolder beneath it in the help file
builder's <legacyBold>Common Application Data</legacyBold> folder.  See the
<link xlink:href="a24489fb-45d6-46f4-9eaa-9a9c4e0919b2#PresentationStyles" /> topic for more information.</para>

				<para>The presentation style configuration file is an XML file with an extension of
<localUri>.presentation</localUri>.  It can contain the information for one or more custom presentation styles.
The following sections describe the elements that it contains.
				</para>
			</content>

			<sections>
				<section address="PresentationStyles">
					<title>PresentationStyles</title>
					<content>
						<para>This is the root element.  Each <codeInline>PresentationStyle</codeInline> element is nested
within this one.</para>
					</content>
				</section>

				<section address="PresentationStyle">
					<title>PresentationStyle</title>
					<content>
						<para>This defines a single presentation style.  All of the following elements are nested within it.
The following attributes are required:</para>

						<list class="bullet">
							<listItem>
								<para><codeInline>ID</codeInline> - This attribute uniquely identifies the presentation style.</para>
							</listItem>

							<listItem>
								<para><codeInline>Title</codeInline> - This attribute defines a friendly name that can be used in
development tools rather than the ID.</para>
							</listItem>

							<listItem>
								<para><codeInline>BasePath</codeInline> - This attribute defines the base base folder location
for the presentation style's files.</para>
							</listItem>
						</list>

						<para>Throughout the configuration file, all file and folder path values support environment
variables which will be expanded at runtime.  If relative, the <codeInline>BasePath</codeInline> value will be
considered relative to the presentation style file's location.  Relative paths within a presentation style
element are considered to be relative to the presentation style's base path.</para>

						<para>Attribute values in the form "<codeInline>{@Name}</codeInline>" will be replaced at build time
with the named project property value or replacement tag value by the build engine.</para>

					</content>
				</section>

				<section address="Description">
					<title>Description</title>
					<content>
						<para>This element provides a description of the presentation style.  Build tools can display this to
provide more details about the selected presentation style.</para>
					</content>
				</section>

				<section address="SupportedFormats">
					<title>SupportedFormats</title>
					<content>
						<para>This defines the help file formats supported by this presentation style.  The content of this
element is one or more <codeInline>Format</codeInline> elements with a required <codeInline>Type</codeInline>
attribute that defines one of the help file formats supported by the presentation style.  The format type values
are:</para>

						<list class="bullet">
							<listItem>
								<para><codeInline>HtmlHelp1</codeInline> - HTML Help 1 (CHM)</para>
							</listItem>
							<listItem>
								<para><codeInline>MSHelp2</codeInline> - MS Help 2 (HxS)</para>
							</listItem>
							<listItem>
								<para><codeInline>MSHelpViewer</codeInline> - MS Help Viewer (MSHC)</para>
							</listItem>
							<listItem>
								<para><codeInline>Website</codeInline> - Website output</para>
							</listItem>
						</list>

						<para>If a presentation style does not support a particular help format, it can be omitted.</para>
					</content>
				</section>

				<section address="HelpContent">
					<title>HelpContent</title>
					<content>
						<para>This defines the content from the presentation style that should be embedded in the compiled
help file such as images, style sheets, and scripts.  The content of this element consists of one or more
<codeInline>Files</codeInline> elements.  These define the files to copy and their destination in the compiled
help file.  The required <codeInline>Source</codeInline> attribute defines the source location relative to the
presentation style base path.  The optional <codeInline>Destination</codeInline> attribute, if specified, defines
the relative location of the files in the compiled help file.  If omitted, the files are copied to a like-named
folder relative to the root of the compiled help file.  If the <codeInline>Destination</codeInline> attribute is
set to an empty string, the files are copied to the root of the compiled help file.  Unlike all other path
values, the <codeInline>Destination</codeInline> value must always be a relative path.</para>

						<alert class="note">
							<para>UNIX based web servers may be case-sensitive with regard to folder and filenames so match the
case of the folder and filenames in the elements to their actual casing on the file system.</para>
						</alert>

					</content>
				</section>

				<section address="ResourceItems">
					<title>ResourceItems</title>
					<content>
						<para>This defines the path to the shared content resource items.  These files contain the localizable
elements such as messages, section titles, language element names, etc.  The required <codeInline>Path</codeInline>
element is used to specify the location of the resource item files.  The files in the indicated folder will be
passed as parameters to the content resolution components used by the <application>BuildAssembler</application>
tool.</para>

						<para>The Sandcastle Help File Builder will look for a child element named
<codeInline>ToolResourceItems</codeInline>.  If found, the required <codeInline>Path</codeInline> attribute will
be used to locate tool-specific resource item files.  These are used to override the default resource items from
the presentation style in order to do such things as insert project properties into the values using tag
substitution.</para>

						<para>Files in the tool resource items folder should be named using the format
<localUri>[ID]BuilderContent_[Language].xml</localUri> where <localUri>ID</localUri> is the presentation style ID
and <localUri>Language</localUri> is the language code for the resources (i.e.
<localUri>VS2005BuilderContent_en-US.xml</localUri>).
						</para>
					</content>
				</section>

				<section address="DocumentModelTransformation">
					<title>DocumentModelTransformation</title>
					<content>
						<para>This defines the document model XSL transformation to use on the reflection data to prepare it
for use with <application>BuildAssembler</application> in order to generate topics.  The required
<codeInline>File</codeInline> attribute specifies the path to the XSL transformation.</para>

						<para>The document model XSL transformation typically has parameters that can be passed to it to
modify how it works.  You can define these paramters with appropriate defaults or substitution tags that will be
filled in at build time using optional <codeInline>Parameter</codeInline> elements nested within the
<codeInline>DocumentModelTransformation</codeInline> element.  The parameter elements have a required
<codeInline>Name</codeInline> and <codeInline>Value</codeInline> attribute that define the parameter's name and
value.</para>
					</content>
				</section>

				<section address="IntermediateTOCTransformation">
					<title>IntermediateTOCTransformation</title>
					<content>
						<para>This defines the XSL transformation to use on the reflection data to generate the intermediate
table of contents XML file used by help formats that require a table of contents.  As above, parameter elements
can be specified if necessary to define any parameters required by the transformation file.</para>
					</content>
				</section>

				<section address="ConceptualBuildConfiguration">
					<title>ConceptualBuildConfiguration</title>
					<content>
						<para>This defines the <application>BuildAssembler</application> configuration file to use for
conceptual content builds.  The required <codeInline>File</codeInline> attribute specified the path to the file.</para>
					</content>
				</section>

				<section address="ReferenceBuildConfiguration">
					<title>ReferenceBuildConfiguration</title>
					<content>
						<para>This defines the <application>BuildAssembler</application> configuration file to use for
reference content (API) builds.  The required <codeInline>File</codeInline> attribute specified the path to the
file.</para>
					</content>
				</section>

				<section address="TransformComponentArguments">
					<title>TransformComponentArguments</title>
					<content>
						<para>The XSL transformations used by <application>BuildAssembler</application>'s
<codeInline>TransformComponent</codeInline> typically have a set of parameters that can be used to alter
aspects of their processing such as inserting a logo image into the topic headers.  This element can be used by
third-party build tools such as the Sandcastle Help File Builder to modify them for the build.  It is up to
the build tool to insert the modified values into the appropriate configuration file at build time.</para>

						<para>The content of this element consists of a set of <codeInline>Argument</codeInline> elements
with the following attributes:</para>

						<list class="bullet">
							<listItem>
								<para><codeInline>Key</codeInline> - This required attribute defines the argument key name.</para>
							</listItem>
							<listItem>
								<para><codeInline>ForConceptualBuild</codeInline> - This required attribute specifies whether or
not to include the parameter in the conceptual build.</para>
							</listItem>
							<listItem>
								<para><codeInline>ForReferenceBuild</codeInline> - This required attribute specifies whether or
not to include the parameter in the reference (API) build.</para>
							</listItem>
							<listItem>
								<para><codeInline>Description</codeInline> - This required attribute provides a description of
the parameter that can be displayed by build tools.  It can be used to provide usage notes, information on the
set of valid values, and information about what happens if a value is not specified.</para>
							</listItem>
							<listItem>
								<para><codeInline>Value</codeInline> - This attribute is optional.  It allows you to specify a
simple value to use for the default.   If present, any argument element content is ignored.  If a
<codeInline>Value</codeInline> attribute is missing, it is assumed that the element content will serve as the
value.  This allows for complex values such as XML to be used (i.e. the syntax filter language definitions).
To restrict the argument to a simple value with no specific default value, specify the <codeInline>Value</codeInline>
attribute and set it to an empty string.</para>
							</listItem>
						</list>
					</content>
				</section>

			</sections>
		</section>

		
		<relatedTopics>
			<link xlink:href="a24489fb-45d6-46f4-9eaa-9a9c4e0919b2" />
			<link xlink:href="81f38cdc-8859-441b-a249-b67b03e492ed" />
		</relatedTopics>
	</developerConceptualDocument>
</topic>
