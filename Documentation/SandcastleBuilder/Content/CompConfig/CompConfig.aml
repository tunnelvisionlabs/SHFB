<?xml version="1.0" encoding="utf-8"?>
<topic id="8dcbb69b-7a1a-4049-8e6b-2bf344efbbc9" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Custom build components can be used to add additional features to the help topics as they are
generated by the Sandcastle <localUri>BuildAssembler.exe</localUri> tool and are supported by the help file
builder.  The following build components are supplied with the help file builder and are pre-configured for you
in its configuration file templates:</para>

			<list class="bullet">
					<listItem>
						<para><link xlink:href="7f03ba39-09f8-4320-bdbd-ed31a3bd885f" /></para>
					</listItem>
					<listItem>
						<para><link xlink:href="85c08740-1190-471c-8fea-360a4a8e4612" /></para>
					</listItem>
					<listItem>
						<para><link xlink:href="92a6e678-48fb-4e6c-a7e5-34f264b01212" /></para>
					</listItem>
					<listItem>
						<para><link xlink:href="f502c07b-8110-477d-8953-73255296206b" /></para>
					</listItem>
					<listItem>
						<para><link xlink:href="7e6e0e96-36cd-4541-9477-2657b98661f5" /></para>
					</listItem>
					<listItem>
						<para><link xlink:href="58ce80ee-eb4b-4027-8871-7e83fad8e476" /></para>
					</listItem>
			</list>

			<para>You can override the default configuration for the Code Block Component and the Post-Transform
Component as described below.  The Help Attributes and Show Missing Documentation components are configured via
project properties.  The Resolve Conceptual Links and Version Information components have no configurable
properties.  The JavaScript syntax generator is included automatically when you select the
<codeInline>JavaScript</codeInline> option in the <codeInline>SyntaxFilters</codeInline> property. As such,
they will not appear in the Component Configuration Dialog.</para>

			<para>The following build components are not pre-configured and must be added to the project in order to
use them.</para>

			<list class="bullet">
				<listItem>
					<para><link xlink:href="dcc9f938-0d5e-4010-bbfe-fd64168a443b" /></para>
				</listItem>
				<listItem>
					<para><link xlink:href="5d546511-6aec-455a-ba09-9daffb124c6d" /></para>
				</listItem>
				<listItem>
					<para>A set of <link xlink:href="3a1c4bf1-8ecf-4ab3-8010-277bed8d3819">cached build data components</link>
that cache key information such as comment, reflection index information, and MSDN URLs across builds in order to
speed them up.</para>
					</listItem>
			</list>
    </introduction>

<section>
  <title>Selecting and Configuring Build Components</title>
  <content>
		<para>To select and configure build components, select the <codeInline>ComponentConfigurations</codeInline>
project property and click the "..." button to the right of it.  The dialog below is then displayed.  As noted
above, the Code Block Component and Post-Transform Component already exist in the help file builder configuration
file templates so you do not need to add them to the project unless you want to override their default
configurations.</para>

		<mediaLink><image xlink:href="CompConfig" placement="center"/></mediaLink>

		<para>Available build components are listed on the left.  Version, copyright, and description information is
shown below the list and will change to reflected the currently selected component.  The list on the right
displays the components selected for use in the current project. Double-click a component on the left or click
the <ui>Add</ui> button to add a component to the project.  Click the <ui>Configure</ui> button to configure the
component.  Click the <ui>Delete</ui> button to delete a component from the project.  The checkboxes next to each
project component allow you to enable or disable the component within the project.  If disabled, it will remain
in the project with its configuration information but it will not be used during a build.  As noted above, the
Code Block and Post-Transform components appear by default in the help file builder configuration file so if you
disable your customized settings, the component will still be used but will revert to the default configuration.
Third-party build components contain a default configuration but it may not be suitable for your project.  As
such, you should configure each component that you add to the project so that it will work as expected.</para>

		<para>For information on writing your own custom build components, see the Code Project article
<externalLink><linkText>Creating Custom Build Components for Sandcastle</linkText>
<linkUri>http://www.codeproject.com/KB/cs/SandcastleComponents.aspx</linkUri>
<linkTarget>_blank</linkTarget></externalLink>.</para>

  </content>
</section>

<section>
  <title>Adding Third-Party Build Components</title>
  <content>
		<para>Third-party build components can also be added by copying their assembly, configuration file, and any
supporting files to the <localUri>.\Components and Plug-Ins</localUri> folder or a subfolder beneath it in the
help file builder's <legacyBold>Common Application Data</legacyBold> folder.  See the
<link xlink:href="a24489fb-45d6-46f4-9eaa-9a9c4e0919b2#BuildComponents" /> topic for more information.  Refer to
the component's documentation for information about its features and configuration options.  See the
<link xlink:href="e6d18448-2459-46f1-bbdc-a7db415f2bda" /> topic for information on creating a configuration file
for a third-party component that does not have one or to allow configuration of a stock Sandcastle build
component.  For a list of current third-party build components, see the
<link xlink:href="c18d6cb6-e4e4-4944-84ee-f867aa6cfb0d" /> topic.</para>

  </content>
</section>

<section>
  <title>Adding Third-Party Syntax Filter Generators</title>
  <content>
  	<para>Custom language syntax filter generators can be made available via the project's
<codeInline>SyntaxFilters</codeInline> property by creating a syntax filter generator definition file.  Copy the
syntax filter generator's assembly, configuration file, and any supporting files to the
<localUri>.\Components and Plug-Ins</localUri> folder or a subfolder beneath it in the help file builder's
<legacyBold>Common Application Data</legacyBold> folder.  See the
<link xlink:href="a24489fb-45d6-46f4-9eaa-9a9c4e0919b2#BuildComponents" /> topic for more information.  Refer to
the component's documentation for information about its features and configuration options.  See the
<link xlink:href="5e80d139-811c-48ed-9b52-dcd8a3f5aef3" /> topic for information on creating a configuration file
for a third-party syntax generator that does not have one.  For a list of current third-party build components,
see the <link xlink:href="c18d6cb6-e4e4-4944-84ee-f867aa6cfb0d" /> topic.</para>

  </content>
</section>

    <relatedTopics>
    <link xlink:href="e6d18448-2459-46f1-bbdc-a7db415f2bda" />
    <link xlink:href="5e80d139-811c-48ed-9b52-dcd8a3f5aef3" />
    <link xlink:href="e32086c6-de17-4e54-a746-1ac80bf0c45a" />
    </relatedTopics>

  </developerConceptualDocument>
</topic>
