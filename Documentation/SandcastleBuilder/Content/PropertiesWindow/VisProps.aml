<?xml version="1.0" encoding="utf-8"?>
<topic id="3c489bd6-598c-4684-aafb-fbe9400864d3" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>The following properties are available in the Visibility category.  These control what appears in the
help file and can reduce the help content and get rid of unwanted items, especially when documenting internal and
private members.  Information is written to the log file detailing how each property affected the build.</para>

			<alert class="note">
				<para><legacyBold>Known Limitations</legacyBold></para>

				<para>Many of the properties starting with "<codeInline>Document</codeInline>" are applied after the
<application>MRefBuilder</application> tool runs.  When the <codeInline>Document Internals</codeInline> and/or
<codeInline>Document Privates</codeInline> options are set to true, setting one or more of the
<codeInline>Document Inherited *</codeInline> options to false may increase the build time on help files with a
large number of topics.  If you find that the <legacyItalic>Applying visibility properties</legacyItalic> step
of the build is taking a very long time, you can set these options to true and use the
<codeInline>Api Filter</codeInline> project option to remove the unwanted members.  This is generally much more
efficient as <application>MRefBuilder</application> removes the items as it is generating the reflection
information file. This also applies to some of the other properties in this category.  The trade-off is that you
must search for and exclude the items manually in the API filter search dialog box.</para>
			</alert>

			<autoOutline lead="none" excludeRelatedTopics="true" />
    </introduction>

<section address="DocAttrs">
  <title>Attributes on types and their members (DocumentAttributes)</title>
  <content>
		<para>When set to false, the default, the help file builder will strip all attribute information from the
documented items so that they do not appear in the syntax section of each class, property, method, etc. in the
compiled help file. When set to true, the attribute information is left intact and will appear in the help file.
The attributes <codeInline>ExtensionAttribute</codeInline>, <codeInline>FixedBufferAttribute</codeInline>,
<codeInline>FlagsAttribute</codeInline>, <codeInline>SerializableAttribute</codeInline>,
<codeInline>ObsoleteAttribute</codeInline>, and several special attributes used by <application>AjaxDoc</application>
and <application>Script#</application> are always included regardless of this property's setting as they provide
important information about the types and members to which they are applied or are used by other components such
as the syntax generators.</para>

  </content>
</section>

<section address="DocEII">
  <title>Explicit interface implementations (DocumentExplicitInterfaceImplementations)</title>
  <content>
		<para>When set to false, the default, explicit interface implementations are removed from the help file.
This includes explicit implementations in base classes so that they do not appear in the class members help
pages.  Set this property to true to include them in the help file.</para>

  </content>
</section>

<section address="DocInhMem">
  <title>Inherited base class members (DocumentInheritedMembers)</title>
  <content>
		<para>When set to true, the default, all inherited members of the class are listed in the class members help
page.  When set to false, all inherited members including inherited .NET Framework class members are removed from
the class members help pages.  This can be useful when documenting internal or private members to help reduce
clutter.</para>

  </content>
</section>

<section address="DocFrmwkMem">
  <title>Inherited .NET Framework members (DocumentInheritedFrameworkMembers)</title>
  <content>
		<para>When set to true, the default, all inherited .NET Framework members of the class (any members starting
with "<codeInline>System.</codeInline>" or "<codeInline>Microsoft.</codeInline>") are listed in the class members
help pages. When set to false, all inherited .NET Framework class members are removed from the class members help
pages.  This can be useful when documenting internal or private members to help reduce clutter.  For this option
to work, <codeInline>Document Inherited Members</codeInline> must also be set to true.  When it is set to false,
all framework members are removed.</para>

  </content>
</section>

<section address="DocFrmwkInt">
  <title>Inherited .NET Framework internal members (DocumentInheritedFrameworkInternalMembers)</title>
  <content>
		<para>When set to false, the default, all inherited .NET Framework members that have internal (Friend)
visibility (any internal members starting with "<codeInline>System.</codeInline>" or "<codeInline>Microsoft.</codeInline>")
are removed from the class members help pages.  This can be useful when documenting internal or private members
to help reduce clutter.  For this option to work, <codeInline>Document Inherited Framework Members</codeInline>
and <codeInline>Document Internals</codeInline> must also be set to true. When this property is set to true,
internal framework members are included.</para>

  </content>
</section>

<section address="DocFrmwkPriv">
  <title>Inherited .NET Framework private members (DocumentInheritedFrameworkPrivateMembers)</title>
  <content>
		<para>When set to false, the default, all inherited .NET Framework members that have private visibility (any
private members starting with "<codeInline>System.</codeInline>" or "<codeInline>Microsoft.</codeInline>") are
removed from the class members help pages.  This can be useful when documenting internal or private members to
help reduce clutter.  For this option to work, <codeInline>Document Inherited Framework Members</codeInline> and
<codeInline>Document Privates</codeInline> must also be set to true.  When this property is set to true, private
framework members are included.</para>

  </content>
</section>

<section address="DocInternals">
  <title>Internal members (DocumentInternals)</title>
  <content>
		<para>When set to false, the default, the help file builder will not document any internal (Friend) members
of classes in the documentation assemblies. When true, the help file builder will add the <system>/internal+</system>
command line option to <application>MRefBuilder</application> so that it does include documentation for internal
class members.  Because they share a similar visibility, protected internal members will be left in the help file
when this is set to true even if the <codeInline>Document Protected</codeInline> property is set to false. Also
note that this property works independently of the <codeInline>Document Privates</codeInline> property below.</para>

  </content>
</section>

<section address="DocPrvFlds">
  <title>Private fields (DocumentPrivateFields)</title>
  <content>
		<para>When set to false, the default, the help file builder will not document any private fields of classes
in the documentation assemblies.  Since most private fields back properties or represent items such as controls
on forms, they usually do not have comments and can significantly clutter the resulting help file with unwanted
entries.  Leaving this option set to false can eliminate the problem.  When set to true, the private fields are
included in  the help file.  To work, the <codeInline>Document Privates</codeInline> property must also be set
to true.</para>

  </content>
</section>

<section address="DocPrivates">
  <title>Private members (DocumentPrivates)</title>
  <content>
		<para>When set to false, the default, the help file builder will not document any private members of classes
in the documentation assemblies.  When true, the help file builder will add the <system>/internal+</system>
command line option to <application>MRefBuilder</application> so that it does include documentation for private
class members.  Also note that this property works independently of the <codeInline>Document Internals</codeInline>
property above.</para>

  </content>
</section>

<section address="DocProt">
  <title>Protected members (DocumentProtected)</title>
  <content>
		<para>When set to true, the default, the help file builder will document all protected and protected internal
members of classes in the documentation assemblies.  When false, the help file builder will remove them from the
help file including those inherited from base .NET framework classes (those starting with
"<codeInline>System.</codeInline>" and "<codeInline>Microsoft.</codeInline>").  Because they share a similar
visibility, protected internal members will be left in the help file when the <codeInline>Document Internals</codeInline>
property is set to true even if this property is set to false.</para>

  </content>
</section>

<section address="DocSealed">
  <title>Protected members of sealed classes (DocumentSealedProtected)</title>
  <content>
		<para>When set to true, the default, the help file builder will document all protected members of sealed
classes in the documentation assemblies. When false, the help file builder will remove all protected members from
sealed classes so that they do not appear in the help file.  To work, the <codeInline>Document Protected</codeInline>
property must also be set to true.</para>

  </content>
</section>

<section address="DocProtInt">
  <title>Document "protected internal" members as "protected" instead (DocumentProtectedInternalAsProtected)</title>
  <content>
		<para>When set to false, the default, the help file builder will document all protected internal members of
classes in the documentation assemblies without modification.  When true, the help file builder will alter
protected internal members so that they are listed as protected only in the help file.  If
<codeInline>Document Protected</codeInline> is set to false, this option is ignored.</para>

  </content>
</section>

<section address="ApiFilter">
  <title>Edit API Filter (ApiFilter)</title>
  <content>
		<para>This property represents a collection of items that define an API filter for the
<application>MRefBuilder</application> tool.  The items in this filter define which elements of a namespace or
type should be omitted from the generated reflection information file and thus the resulting help file.  This is
useful for excluding unwanted types and members, especially those generated by the compiler, and inherited base
class members.  Namespaces excluded in the <codeInline>Namespace Summaries</codeInline> property and items
containing an <codeInline>&lt;exclude /&gt;</codeInline> tag in their XML comments are automatically added to the
API filter at build time.  If there is a conflict between these items and the API filter, the API filter will
take precedence and a warning is written to the log file to note the conflict. See the
<link xlink:href="7df16a60-f718-4b8f-bfa2-88c42906070c" /> topic for more details on how to use this property.</para>

  </content>
</section>

		<relatedTopics>
			<link xlink:href="7df16a60-f718-4b8f-bfa2-88c42906070c" />
			<link xlink:href="e32086c6-de17-4e54-a746-1ac80bf0c45a" />
		</relatedTopics>

	</developerConceptualDocument>
</topic>
