<!DOCTYPE html ><html><head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><meta charset="utf-8"><link rel="shortcut icon" href="../icons/favicon.ico"><link rel="stylesheet" type="text/css" href="../styles/branding.css"><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css"><script type="text/javascript" src="../scripts/branding.js"> </script><title>Member ID Strings</title><meta name="Language" content="en-us"><meta name="System.Keywords" content="member ID strings"><meta name="System.Keywords" content="ID string"><meta name="Microsoft.Help.Id" content="ee5d612e-914f-411f-bd95-23478b15e4de"><meta name="Description" content="All cref attributes on documentation elements such as see or exception generate an ID string in the XML comments file. Normally, the ID string can be properly generated by the compiler based on a partial or fully qualified type or member name."><meta name="Microsoft.Help.ContentType" content="Concepts"><meta name="BrandingAware" content="true"><link type="text/css" rel="stylesheet" href="../styles/highlight.css"><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css"><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle"><div class="pageHeader" id="PageHeader">Sandcastle XML Comments Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="4268757F-CE8D-4E6D-8502-4F7F2E22DDA3.htm" title="Sandcastle XML Comments Guide" tocid="roottoc">Sandcastle XML Comments Guide</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="4268757F-CE8D-4E6D-8502-4F7F2E22DDA3.htm" title="Welcome" tocid="4268757F-CE8D-4E6D-8502-4F7F2E22DDA3">Welcome</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="B9370929-E413-447F-9E41-EE3A362CD7DC.htm" title="License Agreement" tocid="B9370929-E413-447F-9E41-EE3A362CD7DC">License Agreement</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="57C91630-95D6-4E3E-AF24-3415CC569AC8.htm" title="Walkthrough: Enabling and Using XML Comments" tocid="57C91630-95D6-4E3E-AF24-3415CC569AC8">Walkthrough: Enabling and Using XML Comments</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="515d5a54-5047-4d6f-bf51-d47c7c699cc2.htm" title="Usage Notes" tocid="515d5a54-5047-4d6f-bf51-d47c7c699cc2">Usage Notes</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="ee5d612e-914f-411f-bd95-23478b15e4de.htm" title="Member ID Strings" tocid="ee5d612e-914f-411f-bd95-23478b15e4de">Member ID Strings</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="BD91FAD4-188D-4697-A654-7C07FD47EF31.htm" title="Namespace Comments" tocid="BD91FAD4-188D-4697-A654-7C07FD47EF31">Namespace Comments</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="20dc8c5f-9979-4ecd-92ce-cea6ce7acaeb.htm" title="Section Elements" tocid="20dc8c5f-9979-4ecd-92ce-cea6ce7acaeb">Section Elements</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="f8464c0f-f62a-4faf-b11a-9a41173307e8.htm" title="Block Elements" tocid="f8464c0f-f62a-4faf-b11a-9a41173307e8">Block Elements</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="d297bc14-33aa-4152-ae36-9f658b15de87.htm" title="Inline Elements" tocid="d297bc14-33aa-4152-ae36-9f658b15de87">Inline Elements</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="9341fdc8-1571-405c-8e61-6a6b9b601b46.htm" title="Miscellaneous Elements" tocid="9341fdc8-1571-405c-8e61-6a6b9b601b46">Miscellaneous Elements</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="6C5FE68C-2E66-4B0A-967C-34868220D6EC.htm" title="Frequently Asked Questions (FAQ)" tocid="6C5FE68C-2E66-4B0A-967C-34868220D6EC">Frequently Asked Questions (FAQ)</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="7F003236-9AF3-4B6A-8F14-4124FFF0AD7B.htm" title="Links to Resources" tocid="7F003236-9AF3-4B6A-8F14-4124FFF0AD7B">Links to Resources</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="BD2B1A8B-275D-4584-9FB1-92759FAF37D7.htm" title="Making a Donation" tocid="BD2B1A8B-275D-4584-9FB1-92759FAF37D7">Making a Donation</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="0999CAAA-4992-4352-9ED2-965892040176.htm" title="Version History" tocid="0999CAAA-4992-4352-9ED2-965892040176">Version History</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="461BBB39-1C25-4B05-BD25-F56FDACF54A5.htm" title="Glossary" tocid="461BBB39-1C25-4B05-BD25-F56FDACF54A5">Glossary</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="fcf74513-88fd-0131-225c-098460da0f56.htm" title="XMLCommentsExamples" tocid="fcf74513-88fd-0131-225c-098460da0f56">XMLCommentsExamples</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="f055bdef-60b4-de86-62d0-3b47c3f6786a.htm" title="XMLCommentsExamples.DocumentationInheritance" tocid="f055bdef-60b4-de86-62d0-3b47c3f6786a">XMLCommentsExamples.DocumentationInheritance</a></div></div><div id="TocResizableEw" class="tocResizableEw" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="Sandcastle XML Comments Guide" src="../icons/Sandcastle.jpg"></td><td class="titleColumn">Member ID Strings</td></tr></table><span class="introStyle"></span><div class="introduction"><p>All <span class="code">cref</span> attributes on documentation elements such as <span class="code">see</span>
or <span class="code">exception</span> generate an ID string in the XML comments file.  Normally, the ID string
can be properly generated by the compiler based on a partial or fully qualified type or member name.  However,
there are occasions where this will not work properly.  A common example is in C++ code where the compiler is not
always able to generate IDs for forward referenced members.  In such cases, an ID string can be used as a
reference explicitly instead of letting the compiler figure it out.</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note"> Note</th></tr><tr><td><p>Author Credit: Most of the information in this topic was originally written by Microsoft as part
of the .NET Documentation Guidelines document.</p></td></tr></table></div></div><div id="ID1RBSection" class="collapsibleSection"><p>The format of the ID string is shown below.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EANABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EANABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EANABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">type:fullname[(arglist)]`genericcount</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EANABAAA");</script><p><span class="code">type</span> is one of the following.  The final two are specific to the
Sandcastle Help File Builder and Tools and are never generated by the compiler.</p><div class="tableSection"><table><tr><th><p>Type</p></th><th><p>Description</p></th></tr><tr><td><p>!</p></td><td><p>Used by the compiler to indicate an error such as being unable to resolve the member ID</p></td></tr><tr><td><p>N</p></td><td><p>Namespace</p></td></tr><tr><td><p>T</p></td><td><p>Type (class, interface, structure, enumeration, etc.)</p></td></tr><tr><td><p>F</p></td><td><p>Field</p></td></tr><tr><td><p>E</p></td><td><p>Event</p></td></tr><tr><td><p>P</p></td><td><p>Property</p></td></tr><tr><td><p>M</p></td><td><p>Method</p></td></tr><tr><td><p>R</p></td><td><p>Sandcastle generated.  Represents the root namespace page.  There will always be a single
entry named R:Project_[HtmlHelpName] where "[HtmlHelpName]" is the value of your project's HTML Help Name
property with spaces replaced by underscores.  This suffix is required to keep the root namespace container page
ID unique across all help files so that there are no duplicate IDs when generating MS Help Viewer output.</p></td></tr><tr><td><p>O</p></td><td><p>Sandcastle specific.  Used to generate a link to the Overloads List page for an overloaded
member.</p></td></tr></table></div><p><span class="code">fullname</span> is the full name of the member from the root.  Thus referencing
<span class="code">StringBuilder</span> would be <span class="code">System.Text.StringBuilder</span>.  The full
name will include any member references as well so referencing the <span class="code">Append</span> method of
<span class="code">StringBuilder</span> would be <span class="code">System.Text.StringBuilder.Append</span>.</p><p>For properties that accept parameters and methods with parameters, the argument list is next.  The
argument list contains the parentheses as well.  Each argument is specified as the full name of the associated
type.  For reference types, the type name is followed by an at (@) sign.  For array types, the type name is
followed by brackets ([]).  Other symbols are possible but they are not supported by Visual Basic or C#.</p><p>For generic classes, the type is followed by a back tick (`) and the number of generic type
parameters.  For generic methods, there is one back tick (`) and a number for each generic parameter.  Additional
generic parameters are separated by a comma.  Each number is the zero-based index within the parameter list of
the parameter.</p><p>There are no spaces allowed in the ID string.  If a name contains a dot (except to separate
namespaces from types, types from other types, and types from members) then the pound (#) sign is used instead.
In general, such a member is not possible. However, for referencing special methods like a constructor or
explicitly implemented members, it is needed.  An example of an explicitly implemented member ID is:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAGABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">M:TestNamespace.TestClass.System#Collections#IEnumerable#GetEnumerator</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGABAAA");</script><p>The constructor for a type is always of the following form.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">M:fullname.#ctor[(arglist)]</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEABAAA");</script><p>The destructor for a class is always of the following form.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">M:fullname.Finalize</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABAAA");</script><p>Operators are encoded as the formal name of the operator.  Refer to the C# documentation for the
formal name of all operators.  For conversion operators, the formal name is used (<span class="code">op_explicit</span>
or <span class="code">op_implicit</span>) followed by a tilde (~) and the return type as follows.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">M:fullname.op_explicit(arglist)~returntype</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="57C91630-95D6-4E3E-AF24-3415CC569AC8.htm">Walkthrough: Enabling and Using XML Comments</a></div><div class="seeAlsoStyle"><a href="515d5a54-5047-4d6f-bf51-d47c7c699cc2.htm">Usage Notes</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://SHFB.CodePlex.com" target="_blank">[v2014.1.26.1] Sandcastle XML Comments Guide</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle XML Comments Guide">Eric@EWoodruff.us</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>