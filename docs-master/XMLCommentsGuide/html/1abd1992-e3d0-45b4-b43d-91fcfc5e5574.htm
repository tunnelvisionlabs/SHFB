<html><head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><link rel="shortcut icon" href="../icons/favicon.ico"><link rel="stylesheet" type="text/css" href="../styles/branding.css"><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css"><script type="text/javascript" src="../scripts/branding.js"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>code</title><meta name="Language" content="en-us"><meta name="System.Keywords" content="block elements, code"><meta name="Microsoft.Help.Id" content="1abd1992-e3d0-45b4-b43d-91fcfc5e5574"><meta name="Description" content="This element is used to indicate that a multi-line section of text should be formatted as a code block."><meta name="Microsoft.Help.ContentType" content="Concepts"><meta name="BrandingAware" content="'true'"><link type="text/css" rel="stylesheet" href="../styles/highlight.css"><script type="text/javascript" src="../scripts/highlight.js"></script><meta name="SelfBranded" content="true"></head><body onload="onLoad()"><header class="ux-header"><div class="header-top-bar">Sandcastle XML Comments Guide</div></header><div class="OH_outerDiv" style="padding: 35px 20px 0 20px;"><div class="OH_leftNav" id="LeftNav">
  <div id="tocnav">
    <div class="toclevel0" data-toclevel="0" style="padding-left: 0px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="4268757F-CE8D-4E6D-8502-4F7F2E22DDA3.htm" title="Sandcastle XML Comments Guide" tocid="roottoc">Sandcastle XML Comments Guide</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;" data-childrenloaded="true"><a class="toc_expanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="f8464c0f-f62a-4faf-b11a-9a41173307e8.htm" title="Block Elements" tocid="f8464c0f-f62a-4faf-b11a-9a41173307e8">Block Elements</a></div><div class="toclevel2 current" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="1abd1992-e3d0-45b4-b43d-91fcfc5e5574.htm" title="code" tocid="1abd1992-e3d0-45b4-b43d-91fcfc5e5574">code</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="e433d846-db15-4ac8-a5f5-f3428609ae6c.htm" title="list" tocid="e433d846-db15-4ac8-a5f5-f3428609ae6c">list</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="4302a60f-e4f4-4b8d-a451-5f453c4ebd46.htm" title="note" tocid="4302a60f-e4f4-4b8d-a451-5f453c4ebd46">note</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="c7973ac7-5a4f-4e4d-9786-5ce659ac8e24.htm" title="para" tocid="c7973ac7-5a4f-4e4d-9786-5ce659ac8e24">para</a></div></div></div><div id="TocResize" class="OH_TocResize"><img id="ResizeImageIncrease" src="../icons/open.gif" onclick="onIncreaseToc()" alt="Expand" title="Expand"><img id="ResizeImageReset" src="../icons/close.gif" style="display:none" onclick="onResetToc()" alt="Minimize" title="Minimize"></div><div class="OH_outerContent" id="OuterContent" style="margin-left: 280px;"><h1 class="title">code</h1><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="introduction"><p>This element is used to indicate that a multi-line section of text should be formatted as a code
block.</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Syntax">Syntax</a></li><li class="outlineSectionEntry"><a href="#SpecialChars">Literal XML And Other Special Characters</a></li><li class="outlineSectionEntry"><a href="#Attributes">Attributes</a></li><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#language">language</a></li><li class="outlineSectionEntry"><a href="#title">title</a></li><li class="outlineSectionEntry"><a href="#CodeImporting">source, region, and removeRegionMarkers</a></li><li class="outlineSectionEntry"><a href="#tabSize">tabSize</a></li><li class="outlineSectionEntry"><a href="#numberLines">numberLines</a></li><li class="outlineSectionEntry"><a href="#outlining">outlining</a></li><li class="outlineSectionEntry"><a href="#keepSeeTags">keepSeeTags</a></li></ul><li class="outlineSectionEntry"><a href="#Nesting">Nested Code Elements</a></li><li class="outlineSectionEntry"><a href="#Examples">Examples</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><a id="Syntax"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div></div><p>This inline block element can be used within any other element.</p><div id="ID0ECKAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0ECKAAABAA_tabs"><div id="ID0ECKAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0ECKAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECKAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECKAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECKAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECKAAABAA','4')" title="Print">Print</a></div></div><div id="ID0ECKAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">language</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"languageId"</span>
  [<span class="highlight-xml-attribute-name">title</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Optional title"</span>]
  [<span class="highlight-xml-attribute-name">source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"externalCodeFile"</span> [<span class="highlight-xml-attribute-name">region</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"importRegion"</span>] [<span class="highlight-xml-attribute-name">removeRegionMarkers</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true | false"</span>]]
  [<span class="highlight-xml-attribute-name">tabsize</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"###"</span>]
  [<span class="highlight-xml-attribute-name">numberLines</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true | false"</span>]
  [<span class="highlight-xml-attribute-name">outlining</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true | false"</span>]
  [<span class="highlight-xml-attribute-name">keepSeeTags</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true | false"</span>]<span class="highlight-xml-bracket">&gt;</span>

/// Code to display

<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">code</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0ECKAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;code language="languageId"
  [title="Optional title"]
  [source="externalCodeFile" [region="importRegion"] [removeRegionMarkers="true | false"]]
  [tabsize="###"]
  [numberLines="true | false"]
  [outlining="true | false"]
  [keepSeeTags="true | false"]&gt;

/// Code to display

&lt;/code&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECKAAABAA');</script><p>Use this element to mark a multi-line block of lines as code.  Use the
<a href="d0db2290-08bb-40cc-9797-23a342b96564.htm">c</a> element to mark inline text as code.</p><div class="alert"><table><tr><th><img src="../icons/alert_note.gif" alt="Note"> <strong>Note</strong></th></tr><tr><td><p>The <span class="code">language</span> and <span class="code">title</span> attributes are supported
by Sandcastle.  All other attributes are implemented by the <strong>Code Block Component</strong>
supplied with the <a href="http://SHFB.CodePlex.com" target="_blank">Sandcastle Help File Builder</a>.  Refer to its help file for more information about the build component.</p></td></tr></table></div><a id="SpecialChars"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Literal XML And Other Special Characters</div></div><p>If you want to include XML or other unencoded information you can do one of the following:</p><ul><li><p>Utilize the <span class="code">source</span> attribute to read it in from an external file instead.</p></li><li><p>Use a <span class="code">CDATA</span> section to encapsulate the code so that special characters
and formatting are preserved.  For example:</p><div id="ID0ECAAIAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0ECAAIAAABAA_tabs"><div id="ID0ECAAIAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">CDATA Example</a></div></div><div id="ID0ECAAIAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECAAIAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECAAIAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECAAIAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECAAIAAABAA','4')" title="Print">Print</a></div></div><div id="ID0ECAAIAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre>/// <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">example</span><span class="highlight-xml-bracket">&gt;</span>
/// <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">language</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"xml"</span> <span class="highlight-xml-attribute-name">title</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Example Configuration"</span><span class="highlight-xml-bracket">&gt;</span>
/// <span class="highlight-xml-bracket">&lt;![CDATA[</span><span class="highlight-xml-cdata">
/// &lt;?xml version="1.0" encoding="utf-8"?&gt;
/// &lt;config&gt;
///   &lt;path&gt;C:\Test\&lt;/path&gt;
///   &lt;filespec mask="*.txt" /&gt;
/// &lt;/config&gt;</span><span class="highlight-xml-bracket">]]&gt;</span>
/// <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">code</span><span class="highlight-xml-bracket">&gt;</span>
/// <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">example</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0ECAAIAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>/// &lt;example&gt;
/// &lt;code language="xml" title="Example Configuration"&gt;
/// &lt;![CDATA[
/// &lt;?xml version="1.0" encoding="utf-8"?&gt;
/// &lt;config&gt;
///   &lt;path&gt;C:\Test\&lt;/path&gt;
///   &lt;filespec mask="*.txt" /&gt;
/// &lt;/config&gt;]]&gt;
/// &lt;/code&gt;
/// &lt;/example&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECAAIAAABAA');</script><p>Be sure to start the example code on a new line after the opening "<span class="code">&lt;![CDATA[</span>"
tag as shown so that the leading whitespace can be normalized correctly.</p><div class="alert"><table><tr><th><img src="../icons/alert_note.gif" alt="Note"> <strong>Note</strong></th></tr><tr><td><p>The inclusion of a <span class="code">CDATA</span> tag anywhere in the code comments can cause
Visual Studio 2005 to lock up when you type an angle bracket within a comment block.  If you are affected by this
issue, there is a hot fix available at: <a href="https://connect.microsoft.com/VisualStudio/Downloads/DownloadDetails.aspx?DownloadID=9646" target="_blank">https://connect.microsoft.com/VisualStudio/Downloads/DownloadDetails.aspx?DownloadID=9646</a>.</p></td></tr></table></div></li></ul><a id="Attributes"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Attributes</div></div><p>The following attributes can be used to control how the code block is handled.</p><a id="language"></a><h4 class="subHeading">language</h4><div class="subsection"><p>This attribute allows you to define the code language.  Although optional, it is recommended
that you always specify a language attribute if using Sandcastle alone.  Many of the presentation styles rely on
the language attribute to classify the code block and handle it in some way such as attaching it to a language
filter or grouping it with like code blocks.  The Sandcastle Help File Builder's code block component will apply
a default language if one is not specified.  The possible language values are as follows:</p><div class="tableSection"><table><tr><th><p>Language ID (case-insensitive)</p></th><th><p>Language Syntax Used</p></th></tr><tr><td><p>cs, C#, CSharp</p></td><td><p>C#</p></td></tr><tr><td><p>cpp, cpp#, C++, CPlusPlus</p></td><td><p>C++</p></td></tr><tr><td><p>c</p></td><td><p>C</p></td></tr><tr><td><p>fs, f#, FSharp, fscript</p></td><td><p>F#</p></td></tr><tr><td><p>EcmaScript, js, JavaScript</p></td><td><p>JavaScript</p></td></tr><tr><td><p>jscript, jscript#, jscriptnet, JScript.NET</p></td><td><p>JScript.NET</p></td></tr><tr><td><p>VB, VB#, vbnet, VB.NET</p></td><td><p>VB/VB.NET</p></td></tr><tr><td><p>vbs, vbscript</p></td><td><p>VBScript</p></td></tr><tr><td><p>htm, html, xml, xsl</p></td><td><p>XML</p></td></tr><tr><td><p>XAML</p></td><td><p>XAML</p></td></tr><tr><td><p>jsharp, J#</p></td><td><p>J#</p></td></tr><tr><td><p>sql, sql server, sqlserver</p></td><td><p>SQL script</p></td></tr><tr><td><p>pshell, powershell, ps1</p></td><td><p>PowerShell script</p></td></tr><tr><td><p>py, python</p></td><td><p>Python</p></td></tr><tr><td><p>Anything else (i.e. "none")</p></td><td><p>No language, no special handling.</p></td></tr></table></div><div class="alert"><table><tr><th><img src="../icons/alert_caution.gif" alt="Important note"> <strong>Important</strong></th></tr><tr><td><p>The full name "<span class="code">language</span>" should be used for the attribute name rather
than the abbreviated form "<span class="code">lang</span>".  The reason is that the XSL transformations used by
the presentation styles expect the full name when they search for the language attribute.  The abbreviated form
is a legacy syntax that should be avoided.  The code block component will auto-correct the attribute name so that
it is not missed by the transformations.</p><p>It is recommended that you always specify a language attribute.</p></td></tr></table></div></div><a id="title"></a><h4 class="subHeading">title</h4><div class="subsection"><p>This attribute allows you to add a title that appears before the code block.  An example of its
use would be to label the example with a description.  If omitted, the language name will appear for the title.
If you do not want a title on a particular block, set the <span class="code">title</span> attribute to a single
space (" ").</p></div><a id="CodeImporting"></a><h4 class="subHeading">source, region, and removeRegionMarkers</h4><div class="subsection"><p>These three attributes are extensions implemented by the code block build component.  The
<span class="code">source</span> attribute is used to specify that the code block's content should be read from an
external source code file.  If used alone, the entire file is imported.  The optional <span class="code">region</span>
attribute can be used to limit the code to a specific section of the file delimited with the named
<span class="code">#region</span> (<span class="code">#pragma region</span> for C++).  The
<span class="code">#region</span> and <span class="code">#endregion</span> tags are excluded from the extracted
section of code.</p><p>This is not to be confused with the XML comments <span class="code">include</span> element.
This extension is intended to extract code from actual source files.  This allows you to manage your code
examples in buildable projects to test them for correctness as a project is developed and altered in the future.
It also saves you from managing the code in the XML comments and does not require that the code be HTML encoded
as it is when written in the comments. The code will be HTML encoded when it is read in for processing.  When
used, it is assumed that there is no code within the code element itself and thus it will always be self-closing.
Here are some examples:</p><p>Retrieve all code from an external file and use the VB.NET syntax to color it.  The path is
relative to the code block component's <span class="code">basePath</span> configuration element.  Typically, the
base path is the path of the documentation project file.  So, if your documentation project is in a subfolder and
the code is in the parent folder in an <em>Examples</em> subfolder, the path would look like the
following example.</p><div id="ID0EFMGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EFMGAAABAA_tabs"><div id="ID0EFMGAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EFMGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EFMGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EFMGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EFMGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EFMGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EFMGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"..\Examples\WholeDemo.vb"</span> <span class="highlight-xml-attribute-name">language</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"vbnet"</span> <span class="highlight-xml-bracket">/&gt;</span></pre></div><div id="ID0EFMGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;code source="..\Examples\WholeDemo.vb" language="vbnet" /&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EFMGAAABAA');</script><p>Retrieve a specific <span class="code">#region</span> from an external file.</p><div id="ID0EDMGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EDMGAAABAA_tabs"><div id="ID0EDMGAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EDMGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDMGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDMGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDMGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDMGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EDMGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"..\Examples\SeveralExamples.vb"</span> 
    <span class="highlight-xml-attribute-name">region</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Example 1"</span> <span class="highlight-xml-attribute-name">language</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"vbnet"</span> <span class="highlight-xml-attribute-name">title</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Example #1"</span> <span class="highlight-xml-bracket">/&gt;</span></pre></div><div id="ID0EDMGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;code source="..\Examples\SeveralExamples.vb" 
    region="Example 1" language="vbnet" title="Example #1" /&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDMGAAABAA');</script><p>Note that VB.NET does not allow <span class="code">#Region</span> and <span class="code">#End Region</span>
within a method body.  Other file types such as XML, XAML, and SQL script do not understand <span class="code">#region</span>
statements.  However, if you want to extract a region from a VB.NET method body or a section of another file
type, you can add the region statements in comments to workaround the limitation.  The component will still find
it and extract the region.</p><div id="ID0EBMGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EBMGAAABAA_tabs"></div><div id="ID0EBMGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBMGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBMGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBMGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBMGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EBMGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre>--------------------------------------------------------
VB.NET Example
--------------------------------------------------------
Public Sub SomeMethod()
    ' #Region "VB.NET Snippet"
    Dim x As Integer

    For x = 1 To 10
        Console.WriteLine(x)
    Next x
    ' #End Region
End Sub

--------------------------------------------------------
XAML Example
--------------------------------------------------------
&lt;Style x:Key="SpecialButton" TargetType="{x:Type Button}"&gt;
  &lt;Style.Triggers&gt;
    &lt;!-- #region XAML Snippet --&gt;
    &lt;Trigger Property="Button.IsMouseOver" Value="true"&gt;
      &lt;Setter Property = "Background" Value="Red"/&gt;
    &lt;/Trigger&gt;
    &lt;!-- #endregion --&gt;
  &lt;/Style.Triggers&gt;
&lt;/Style&gt;

--------------------------------------------------------
SQL Example
--------------------------------------------------------
-- #region SQL snippet
Select *
From   tblName
Where  LastName = 'SMITH'
-- #endregion

/* #region Another snippet */
Select *
From   tblName
Where  FirstName = 'JOHN'
/* #endregion */</pre></div><div id="ID0EBMGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>--------------------------------------------------------
VB.NET Example
--------------------------------------------------------
Public Sub SomeMethod()
    ' #Region "VB.NET Snippet"
    Dim x As Integer

    For x = 1 To 10
        Console.WriteLine(x)
    Next x
    ' #End Region
End Sub

--------------------------------------------------------
XAML Example
--------------------------------------------------------
&lt;Style x:Key="SpecialButton" TargetType="{x:Type Button}"&gt;
  &lt;Style.Triggers&gt;
    &lt;!-- #region XAML Snippet --&gt;
    &lt;Trigger Property="Button.IsMouseOver" Value="true"&gt;
      &lt;Setter Property = "Background" Value="Red"/&gt;
    &lt;/Trigger&gt;
    &lt;!-- #endregion --&gt;
  &lt;/Style.Triggers&gt;
&lt;/Style&gt;

--------------------------------------------------------
SQL Example
--------------------------------------------------------
-- #region SQL snippet
Select *
From   tblName
Where  LastName = 'SMITH'
-- #endregion

/* #region Another snippet */
Select *
From   tblName
Where  FirstName = 'JOHN'
/* #endregion */</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBMGAAABAA');</script><p>The <span class="code">removeRegionMarkers</span> attribute can be used to specify whether or
not region markers within the imported code file or region are removed.  If not specified or set to false, any
nested region markers are left in the imported code block.  If specified and set to true, nested region markers
are removed from the imported code.  This is useful for removing nested region markers from larger code samples
that contain smaller snippets of code used in other examples.  The default setting (false) can be overridden via
the component configuration.</p></div><a id="tabSize"></a><h4 class="subHeading">tabSize</h4><div class="subsection"><p>When the code blocks are formatted by the build component, tab characters are replaced with a
set number of spaces to preserve formatting.  This attribute can be used to override the default setting for a
language which is specified in the syntax file.  For example, if the default tab size for a language is four, adding
<span class="code">tabSize="8"</span> will force it to use eight spaces instead.  If set to zero, the syntax file
setting is used.  This attribute sets the default tab size for unknown languages when used in the component's
configuration.</p></div><a id="numberLines"></a><h4 class="subHeading">numberLines</h4><div class="subsection"><p>This attribute allows you to override the default setting in the component's configuration.
For example, if the default setting is false to turn off line numbering, you can add
<span class="code">numberLines="true"</span> to enable numbering on a specific code example.</p></div><a id="outlining"></a><h4 class="subHeading">outlining</h4><div class="subsection"><p>This attribute allows you to override the default setting in the component's configuration.
For example, if the default setting is false to not add collapsible regions, you can add
<span class="code">outlining="true"</span> to enable collapsible regions on a specific code example.  Note that if
a code block contains no <span class="code">#region</span> or <span class="code">#if</span> blocks, outlining is
automatically disabled and it will not reserve space in the margin for the markers.</p></div><a id="keepSeeTags"></a><h4 class="subHeading">keepSeeTags</h4><div class="subsection"><p>When set to true, this attribute allows you to tell the build component's code colorizer to
preserve <span class="code">see</span> tags within the code so that they can be rendered as clickable links to the
related topic.  If set to false, the default, any <span class="code">see</span> tags within the code will be
colorized and passed through as literal text.  When using this option, you may find that you need to specify
inner text for the <span class="code">see</span> tag so that the link text appears as you want it.  If the
self-closing version of the tag is used, Sandcastle will generally set the link text to the name of the item plus
any parameters if it is a generic type or takes parameters which may not be appropriate within a code sample.</p></div><a id="Nesting"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Nested Code Elements</div></div><p>You can import multiple code snippets into one common colorized code block by nesting
<span class="code">code</span> elements within a parent <span class="code">code</span> element.  On nested
<span class="code">code</span> elements, only the <span class="code">source</span> and <span class="code">region</span>
attributes will be utilized.  All other attributes that control colorization of the merged code block will be
retrieved from the parent <span class="code">code</span> element.</p><div id="ID0ECEAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0ECEAAABAA_tabs"><div id="ID0ECEAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">Nested Code Elements Example</a></div></div><div id="ID0ECEAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECEAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECEAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECEAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECEAAABAA','4')" title="Print">Print</a></div></div><div id="ID0ECEAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">title</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Nested code elements example"</span> <span class="highlight-xml-attribute-name">language</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"VB.NET"</span><span class="highlight-xml-bracket">&gt;</span> 
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"..\Class1.vb"</span> <span class="highlight-xml-attribute-name">region</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Snippet #1"</span> <span class="highlight-xml-bracket">/&gt;</span> 
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"..\Class1.vb"</span> <span class="highlight-xml-attribute-name">region</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Snippet #2"</span> <span class="highlight-xml-bracket">/&gt;</span> 
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">code</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0ECEAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;code title="Nested code elements example" language="VB.NET"&gt; 
&lt;code source="..\Class1.vb" region="Snippet #1" /&gt; 
&lt;code source="..\Class1.vb" region="Snippet #2" /&gt; 
&lt;/code&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECEAAABAA');</script><p>Literal code can also be mixed in between the nested <span class="code">code</span> elements.
However, there are some limitations.  All elements and literal code should be flush left within the parent
<span class="code">code</span> element or you will end up with additional spaces before the first line of each
nested <span class="code">code</span> element.  There may still be additional spaces before the literal code.
This is caused by the indentation included when the XML comments file is created by the compiler.  If this is a
problem, move the example to an include file and remove the excess leading whitespace.  Use an
<span class="code">include</span> element to bring it into the XML comments.  When done this way, the compiler
preserves the spacing when writing the example out to the XML comments file.</p><div id="ID0EAEAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EAEAAABAA_tabs"><div id="ID0EAEAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">Nested Code Elements Example</a></div></div><div id="ID0EAEAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAEAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAEAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAEAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EAEAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">title</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Nested code elements example"</span> <span class="highlight-xml-attribute-name">language</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"VB.NET"</span><span class="highlight-xml-bracket">&gt;</span> 
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"..\Class1.vb"</span> <span class="highlight-xml-attribute-name">region</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Snippet #1"</span> <span class="highlight-xml-bracket">/&gt;</span>

' ... Some stuff happens here ...

<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">code</span> <span class="highlight-xml-attribute-name">source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"..\Class1.vb"</span> <span class="highlight-xml-attribute-name">region</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Snippet #2"</span> <span class="highlight-xml-bracket">/&gt;</span> 
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">code</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EAEAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;code title="Nested code elements example" language="VB.NET"&gt; 
&lt;code source="..\Class1.vb" region="Snippet #1" /&gt;

' ... Some stuff happens here ...

&lt;code source="..\Class1.vb" region="Snippet #2" /&gt; 
&lt;/code&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAEAAABAA');</script><a id="Examples"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div></div><div id="ID0EACAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EACAAABAA_tabs"><div id="ID0EACAAABAA_tab1" class="codeSnippetContainerTabActive" dir="ltr" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EACAAABAA','C#','1','4');return false;">C#</a></div><div id="ID0EACAAABAA_tab2" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EACAAABAA_tab3" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>F#</a></div><div id="ID0EACAAABAA_tab4" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>VB</a></div></div><div id="ID0EACAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This returns a random number</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;returns&gt;A random number using &lt;see cref="SampleNumber"/&gt; as the seed.&lt;/returns&gt;</span> 
<span class="highlight-comment">/// &lt;example&gt;</span> 
<span class="highlight-comment">/// The following example demonstrates the use of this method.</span> 
<span class="highlight-comment">/// </span> 
<span class="highlight-comment">/// &lt;code language="cs"&gt;</span> 
<span class="highlight-comment">/// // Get a new random number</span> 
<span class="highlight-comment">/// SampleClass sc = new SampleClass(10);</span> 
<span class="highlight-comment">/// </span> 
<span class="highlight-comment">/// int random = sc.GetRandomNumber();</span> 
<span class="highlight-comment">///</span> 
<span class="highlight-comment">/// Console.WriteLine("Random value: {0}", random);</span> 
<span class="highlight-comment">/// &lt;/code&gt;</span> 
<span class="highlight-comment">/// </span> 
<span class="highlight-comment">/// &lt;code language="vb"&gt;</span> 
<span class="highlight-comment">/// ' Get a new random number</span> 
<span class="highlight-comment">/// Dim sc As SampleClass = New SampleClass(10)</span> 
<span class="highlight-comment">/// </span> 
<span class="highlight-comment">/// Dim random As Integer = sc.GetRandomNumber()</span> 
<span class="highlight-comment">///</span> 
<span class="highlight-comment">/// Console.WriteLine("Random value: {0}", random)</span> 
<span class="highlight-comment">/// &lt;/code&gt;</span> 
<span class="highlight-comment">/// &lt;/example&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="1abd1992-e3d0-45b4-b43d-91fcfc5e5574" /&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="1bef716a-235b-4d96-a23e-f43b8dcf9abd" /&gt;</span> 
<span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> GetRandomNumber()
{
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> Random(<span class="highlight-keyword">this</span>.SampleNumber).Next();
}</pre></div><div id="ID0EACAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>/// &lt;summary&gt; 
/// This returns a random number 
/// &lt;/summary&gt; 
/// &lt;returns&gt;A random number using &lt;see cref="SampleNumber"/&gt; as the seed.&lt;/returns&gt; 
/// &lt;example&gt; 
/// The following example demonstrates the use of this method. 
///  
/// &lt;code language="cs"&gt; 
/// // Get a new random number 
/// SampleClass sc = new SampleClass(10); 
///  
/// int random = sc.GetRandomNumber(); 
/// 
/// Console.WriteLine("Random value: {0}", random); 
/// &lt;/code&gt; 
///  
/// &lt;code language="vb"&gt; 
/// ' Get a new random number 
/// Dim sc As SampleClass = New SampleClass(10) 
///  
/// Dim random As Integer = sc.GetRandomNumber() 
/// 
/// Console.WriteLine("Random value: {0}", random) 
/// &lt;/code&gt; 
/// &lt;/example&gt; 
/// &lt;conceptualLink target="1abd1992-e3d0-45b4-b43d-91fcfc5e5574" /&gt; 
/// &lt;conceptualLink target="1bef716a-235b-4d96-a23e-f43b8dcf9abd" /&gt; 
public int GetRandomNumber()
{
    return new Random(this.SampleNumber).Next();
}</pre></div><div id="ID0EACAAABAA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAABAA_code_Plain_Div2" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAABAA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAABAA_code_Plain_Div3" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAABAA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAABAA_code_Plain_Div4" class="codeSnippetContainerCode" style="display: none"><pre></pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAABAA');</script><a name="seeAlsoSection"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div></div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="b9d6eb45-8f3b-2ff7-7bce-74067728a9a2.htm">GetRandomNumber</a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="f8464c0f-f62a-4faf-b11a-9a41173307e8.htm">Block Elements</a></div><div class="seeAlsoStyle"><a href="1bef716a-235b-4d96-a23e-f43b8dcf9abd.htm">example</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="http://SHFB.CodePlex.com" target="_blank">[v2014.1.26.1] Sandcastle XML Comments Guide</a></p><div class="OH_feedbacklink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle XML Comments Guide">Eric@EWoodruff.us</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div><script src="//code.jquery.com/jquery-1.11.0.min.js"></script><script type="text/javascript">$(document).ready(function () {DocumentReady();});</script></body></html>