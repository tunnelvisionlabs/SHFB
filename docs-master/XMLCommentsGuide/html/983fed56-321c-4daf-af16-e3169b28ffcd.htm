<html><head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><link rel="shortcut icon" href="../icons/favicon.ico"><link rel="stylesheet" type="text/css" href="../styles/branding.css"><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css"><script type="text/javascript" src="../scripts/branding.js"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>see</title><meta name="Language" content="en-us"><meta name="System.Keywords" content="inline elements, see"><meta name="Microsoft.Help.Id" content="983fed56-321c-4daf-af16-e3169b28ffcd"><meta name="Description" content="This element is used to create an inline link to another API topic or an external website within the text in which it occurs. It can also be used to apply language-specific formatting to a limited set of keywords."><meta name="Microsoft.Help.ContentType" content="Concepts"><meta name="BrandingAware" content="'true'"><link type="text/css" rel="stylesheet" href="../styles/highlight.css"><script type="text/javascript" src="../scripts/highlight.js"></script><meta name="SelfBranded" content="true"></head><body onload="onLoad()"><header class="ux-header"><div class="header-top-bar">Sandcastle XML Comments Guide</div></header><div class="OH_outerDiv" style="padding: 35px 20px 0 20px;"><div class="OH_leftNav" id="LeftNav">
  <div id="tocnav">
    <div class="toclevel0" data-toclevel="0" style="padding-left: 0px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="4268757F-CE8D-4E6D-8502-4F7F2E22DDA3.htm" title="Sandcastle XML Comments Guide" tocid="roottoc">Sandcastle XML Comments Guide</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;" data-childrenloaded="true"><a class="toc_expanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="d297bc14-33aa-4152-ae36-9f658b15de87.htm" title="Inline Elements" tocid="d297bc14-33aa-4152-ae36-9f658b15de87">Inline Elements</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="d0db2290-08bb-40cc-9797-23a342b96564.htm" title="c" tocid="d0db2290-08bb-40cc-9797-23a342b96564">c</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="fa7d6ea0-93ce-41f6-9417-2f98e80fe9f5.htm" title="paramref" tocid="fa7d6ea0-93ce-41f6-9417-2f98e80fe9f5">paramref</a></div><div class="toclevel2 current" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="983fed56-321c-4daf-af16-e3169b28ffcd.htm" title="see" tocid="983fed56-321c-4daf-af16-e3169b28ffcd">see</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="073a5ae1-828f-4bab-b0cb-438cefb5e9fb.htm" title="typeparamref" tocid="073a5ae1-828f-4bab-b0cb-438cefb5e9fb">typeparamref</a></div></div></div><div id="TocResize" class="OH_TocResize"><img id="ResizeImageIncrease" src="../icons/open.gif" onclick="onIncreaseToc()" alt="Expand" title="Expand"><img id="ResizeImageReset" src="../icons/close.gif" style="display:none" onclick="onResetToc()" alt="Minimize" title="Minimize"></div><div class="OH_outerContent" id="OuterContent" style="margin-left: 280px;"><h1 class="title">see</h1><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="introduction"><p>This element is used to create an inline link to another API topic or an external website within the
text in which it occurs.  It can also be used to apply language-specific formatting to a limited set of keywords.</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Syntax">Syntax</a></li><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#CodeReference">Code Reference</a></li><li class="outlineSectionEntry"><a href="#ExternalRef">External Reference</a></li><li class="outlineSectionEntry"><a href="#LangWord">Language Keyword Formatting</a></li></ul><li class="outlineSectionEntry"><a href="#Remarks">Remarks</a></li><li class="outlineSectionEntry"><a href="#Examples">Examples</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><a id="Syntax"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div></div><p>This inline element can be used within any other element.  Any of the following formats may be used
based on the need.</p><a id="CodeReference"></a><h4 class="subHeading">Code Reference</h4><div class="subsection"><div id="ID0EDGGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EDGGAAABAA_tabs"><div id="ID0EDGGAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EDGGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDGGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDGGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDGGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDGGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EDGGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">see</span> <span class="highlight-xml-attribute-name">cref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"member"</span> <span class="highlight-xml-bracket">/&gt;</span>

or

<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">see</span> <span class="highlight-xml-attribute-name">cref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"member"</span><span class="highlight-xml-bracket">&gt;</span>inner text<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">see</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EDGGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;see cref="member" /&gt;

or

&lt;see cref="member"&gt;inner text&lt;/see&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDGGAAABAA');</script><p>The code reference form uses a <span class="code">cref</span> attribute to specify the
member name to which the link should be connected.  The compiler will check that the target member name exists
and will generate a warning if it is not found.  The member name does not have to be fully qualified as long as
the reference is within the containing class or if the appropriate <span class="code">using</span>
(<span class="code">Imports</span> in VB) statements are present.</p><p>If the self-closing form is used, the inner text of the link will be set to the member name
without a namespace or type qualifier.  You can specify inner text on the element to use an alternate value for
the link text or to add a qualifying namespace or type to the member name.</p><p>When specifying type, field, property, event, and non-overloaded method names, the name alone
will suffice as the <span class="code">cref</span> attribute value.  However, when referencing overloaded methods,
you must supply parameter type information to help the compiler determine to which overload you are referring.
The parameter type names are enclosed in parentheses and can be specified using the types for the language being
used (i.e. <span class="code">int</span> or <span class="code">string</span> for C# or <span class="code">Integer</span>
or <span class="code">String</span> for VB).  They can also be specified using the .NET Framework type names such
as <span class="code">Int32</span>, <span class="code">System.Int32</span>, etc.  If an overload takes no
parameters, just specify an empty set of parentheses.  If you want to link to the auto-generated member overloads
help topic, you can specify the fully qualified member name with an "<span class="code">O:</span>" prefix.  See
the <a href="#Examples">Method Overload Examples</a> below for details.</p></div><a id="ExternalRef"></a><h4 class="subHeading">External Reference</h4><div class="subsection"><div id="ID0EDDGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EDDGAAABAA_tabs"><div id="ID0EDDGAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EDDGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDDGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDDGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDDGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDDGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EDDGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">see</span> <span class="highlight-xml-attribute-name">href</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"url"</span> [<span class="highlight-xml-attribute-name">target</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"_blank | _self | _parent | _top"</span>]
    [<span class="highlight-xml-attribute-name">alt</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"alternate text"</span>] <span class="highlight-xml-bracket">/&gt;</span>

or

<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">see</span> <span class="highlight-xml-attribute-name">href</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"url"</span> [<span class="highlight-xml-attribute-name">target</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"_blank | _self | _parent | _top"</span>]
    [<span class="highlight-xml-attribute-name">alt</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"alternate text"</span>]<span class="highlight-xml-bracket">&gt;</span>inner text<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">see</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EDDGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;see href="url" [target="_blank | _self | _parent | _top"]
    [alt="alternate text"] /&gt;

or

&lt;see href="url" [target="_blank | _self | _parent | _top"]
    [alt="alternate text"]&gt;inner text&lt;/see&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDDGAAABAA');</script><p>The external reference form is a customization implemented by Sandcastle.  It uses an
<span class="code">href</span> attribute to specify the URL of an external website or resource to which the link
should be connected.  If the self-closing form is used, the inner text of the link will be set to the URL.  You
can specify inner text on the element to use an alternate value for the link text.</p><p>The optional <span class="code">target</span> attribute can be used to specify where the
content will be opened.  If not specified, <span class="code">_blank</span> is used to open the content in a new
browser window.  The <span class="code">_self</span> option can be used to replace the current topic with the
content of the target URL.  The <span class="code">_parent</span> and <span class="code">_top</span> options can be
used to force the content to be displayed in the parent frame or full window if the current topic is hosted in
one of those manners.</p><p>The optional <span class="code">alt</span> attribute can be used to specify alternate text to
display for the link's tooltip when the mouse hovers over it.  If not specified, no alternate text is added for
the tooltip.</p></div><a id="LangWord"></a><h4 class="subHeading">Language Keyword Formatting</h4><div class="subsection"><div id="ID0EBAGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EBAGAAABAA_tabs"><div id="ID0EBAGAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EBAGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBAGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBAGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBAGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBAGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EBAGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">see</span> <span class="highlight-xml-attribute-name">langword</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"null | Nothing | nullptr | static | shared | virtual |
    Overridable | true | True | false | False | abstract | MustInherit |
    async | await | async/await | Async | Await | Async/Await | let! |
    async/let!"</span> <span class="highlight-xml-bracket">/&gt;</span></pre></div><div id="ID0EBAGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;see langword="null | Nothing | nullptr | static | shared | virtual |
    Overridable | true | True | false | False | abstract | MustInherit |
    async | await | async/await | Async | Await | Async/Await | let! |
    async/let!" /&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBAGAAABAA');</script><p>The language keyword formatting form uses a <span class="code">langword</span> attribute to
specify a language keyword that will receive special handling when the topic is viewed.  When one of the noted
keywords is used, the keyword text displayed is based on the language selected in the language filter if the
presentation style has one.  If a keyword other than one of those listed is specified, it is passed through with
no special formatting or handling.</p></div><a id="Remarks"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div></div><p>Use this element to insert an inline link.  Use the <a href="16cdb957-a35b-4c17-bf5e-ea511b0218e3.htm">seealso</a>
element to insert a link in the <strong>See Also</strong> section of the topic.</p><a id="Examples"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div></div><div id="ID0EDCAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EDCAAABAA_tabs"><div id="ID0EDCAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">Code Reference Examples</a></div></div><div id="ID0EDCAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDCAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDCAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDCAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EDCAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This event is raised when something interesting happens.</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;remarks&gt;The &lt;see cref="OnSomethingHappened"/&gt; method is used to</span> 
<span class="highlight-comment">/// raise this event.  This event uses the general &lt;see cref="EventHandler"/&gt;</span> 
<span class="highlight-comment">/// delegate that passes &lt;see cref="EventArgs.Empty"&gt;EventArgs.Empty&lt;/see&gt;</span> 
<span class="highlight-comment">/// to the handlers.</span> 
<span class="highlight-comment">/// &lt;/remarks&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="EventArgs"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="EventArgs.Empty"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="EventHandler"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="OnSomethingHappened"&gt;XMLCommentsExamples.SampleClass.OnSomethingHappened&lt;/seealso&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;</span> 
<span class="highlight-keyword">public</span> <span class="highlight-keyword">event</span> EventHandler SomethingHappened;

<span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This is a protected virtual method used to raise the</span> 
<span class="highlight-comment">/// &lt;see cref="SomethingHappened"/&gt; event.</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="SomethingHappened"/&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;</span> 
<span class="highlight-keyword">protected</span> <span class="highlight-keyword">virtual</span> <span class="highlight-keyword">void</span> OnSomethingHappened()
{
    <span class="highlight-keyword">var</span> handler = SomethingHappened;

    <span class="highlight-keyword">if</span>(handler != <span class="highlight-keyword">null</span>)
        handler(<span class="highlight-keyword">this</span>, EventArgs.Empty);
}</pre></div><div id="ID0EDCAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>/// &lt;summary&gt; 
/// This event is raised when something interesting happens. 
/// &lt;/summary&gt; 
/// &lt;remarks&gt;The &lt;see cref="OnSomethingHappened"/&gt; method is used to 
/// raise this event.  This event uses the general &lt;see cref="EventHandler"/&gt; 
/// delegate that passes &lt;see cref="EventArgs.Empty"&gt;EventArgs.Empty&lt;/see&gt; 
/// to the handlers. 
/// &lt;/remarks&gt; 
/// &lt;seealso cref="EventArgs"/&gt; 
/// &lt;seealso cref="EventArgs.Empty"/&gt; 
/// &lt;seealso cref="EventHandler"/&gt; 
/// &lt;seealso cref="OnSomethingHappened"&gt;XMLCommentsExamples.SampleClass.OnSomethingHappened&lt;/seealso&gt; 
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt; 
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt; 
public event EventHandler SomethingHappened;

/// &lt;summary&gt; 
/// This is a protected virtual method used to raise the 
/// &lt;see cref="SomethingHappened"/&gt; event. 
/// &lt;/summary&gt; 
/// &lt;seealso cref="SomethingHappened"/&gt; 
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt; 
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt; 
protected virtual void OnSomethingHappened()
{
    var handler = SomethingHappened;

    if(handler != null)
        handler(this, EventArgs.Empty);
}</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDCAAABAA');</script><div id="ID0ECCAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0ECCAAABAA_tabs"><div id="ID0ECCAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">Method Overload Examples</a></div></div><div id="ID0ECCAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECCAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECCAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECCAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECCAAABAA','4')" title="Print">Print</a></div></div><div id="ID0ECCAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This version of the method takes no parameters.</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;remarks&gt;To see all overloads, refer to the</span> 
<span class="highlight-comment">/// &lt;see cref="O:XMLCommentsExamples.SampleClass.DoSomething"&gt;DoSomething</span> 
<span class="highlight-comment">/// Overloads&lt;/see&gt; topic.</span> 
<span class="highlight-comment">/// &lt;para&gt;Other overloads:&lt;/para&gt;</span> 
<span class="highlight-comment">/// &lt;list type="bullet"&gt;</span> 
<span class="highlight-comment">///   &lt;item&gt;</span> 
<span class="highlight-comment">///     &lt;description&gt;&lt;see cref="DoSomething(int)"/&gt;&lt;/description&gt;</span> 
<span class="highlight-comment">///   &lt;/item&gt;</span> 
<span class="highlight-comment">///   &lt;item&gt;</span> 
<span class="highlight-comment">///     &lt;description&gt;&lt;see cref="DoSomething(string)"/&gt;&lt;/description&gt;</span> 
<span class="highlight-comment">///   &lt;/item&gt;</span> 
<span class="highlight-comment">///   &lt;item&gt;</span> 
<span class="highlight-comment">///     &lt;description&gt;&lt;see cref="DoSomething(int, string)"/&gt;&lt;/description&gt;</span> 
<span class="highlight-comment">///   &lt;/item&gt;</span> 
<span class="highlight-comment">/// &lt;/list&gt;</span> 
<span class="highlight-comment">/// &lt;/remarks&gt;</span> 
<span class="highlight-comment">/// &lt;overloads&gt;This method has four overloads&lt;/overloads&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;</span> 
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> DoSomething()
{
}

<span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This version of the method takes an integer parameter.</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;param name="number"&gt;A number to use&lt;/param&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething()"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething(string)"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething(int, string)"/&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;</span> 
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> DoSomething(<span class="highlight-keyword">int</span> number)
{
}

<span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This version of the method takes a string parameter.</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;param name="text"&gt;A text value to use&lt;/param&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething()"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething(int)"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething(int, string)"/&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;</span> 
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> DoSomething(<span class="highlight-keyword">string</span> text)
{
}

<span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This version of the method takes both an integer and a string parameter.</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;param name="number"&gt;A number to use&lt;/param&gt;</span> 
<span class="highlight-comment">/// &lt;param name="text"&gt;A text value to use&lt;/param&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething()"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething(int)"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso cref="DoSomething(string)"/&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;</span> 
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> DoSomething(<span class="highlight-keyword">int</span> number, <span class="highlight-keyword">string</span> text)
{
}</pre></div><div id="ID0ECCAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>/// &lt;summary&gt; 
/// This version of the method takes no parameters. 
/// &lt;/summary&gt; 
/// &lt;remarks&gt;To see all overloads, refer to the 
/// &lt;see cref="O:XMLCommentsExamples.SampleClass.DoSomething"&gt;DoSomething 
/// Overloads&lt;/see&gt; topic. 
/// &lt;para&gt;Other overloads:&lt;/para&gt; 
/// &lt;list type="bullet"&gt; 
///   &lt;item&gt; 
///     &lt;description&gt;&lt;see cref="DoSomething(int)"/&gt;&lt;/description&gt; 
///   &lt;/item&gt; 
///   &lt;item&gt; 
///     &lt;description&gt;&lt;see cref="DoSomething(string)"/&gt;&lt;/description&gt; 
///   &lt;/item&gt; 
///   &lt;item&gt; 
///     &lt;description&gt;&lt;see cref="DoSomething(int, string)"/&gt;&lt;/description&gt; 
///   &lt;/item&gt; 
/// &lt;/list&gt; 
/// &lt;/remarks&gt; 
/// &lt;overloads&gt;This method has four overloads&lt;/overloads&gt; 
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt; 
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt; 
public void DoSomething()
{
}

/// &lt;summary&gt; 
/// This version of the method takes an integer parameter. 
/// &lt;/summary&gt; 
/// &lt;param name="number"&gt;A number to use&lt;/param&gt; 
/// &lt;seealso cref="DoSomething()"/&gt; 
/// &lt;seealso cref="DoSomething(string)"/&gt; 
/// &lt;seealso cref="DoSomething(int, string)"/&gt; 
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt; 
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt; 
public void DoSomething(int number)
{
}

/// &lt;summary&gt; 
/// This version of the method takes a string parameter. 
/// &lt;/summary&gt; 
/// &lt;param name="text"&gt;A text value to use&lt;/param&gt; 
/// &lt;seealso cref="DoSomething()"/&gt; 
/// &lt;seealso cref="DoSomething(int)"/&gt; 
/// &lt;seealso cref="DoSomething(int, string)"/&gt; 
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt; 
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt; 
public void DoSomething(string text)
{
}

/// &lt;summary&gt; 
/// This version of the method takes both an integer and a string parameter. 
/// &lt;/summary&gt; 
/// &lt;param name="number"&gt;A number to use&lt;/param&gt; 
/// &lt;param name="text"&gt;A text value to use&lt;/param&gt; 
/// &lt;seealso cref="DoSomething()"/&gt; 
/// &lt;seealso cref="DoSomething(int)"/&gt; 
/// &lt;seealso cref="DoSomething(string)"/&gt; 
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt; 
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt; 
public void DoSomething(int number, string text)
{
}</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECCAAABAA');</script><div id="ID0EBCAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EBCAAABAA_tabs"><div id="ID0EBCAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">External Reference Examples</a></div></div><div id="ID0EBCAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBCAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBCAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBCAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EBCAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This is used to demonstrate the external reference type of &lt;c&gt;see&lt;/c&gt;</span> 
<span class="highlight-comment">/// and &lt;c&gt;seealso&lt;/c&gt; elements.</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;remarks&gt;</span> 
<span class="highlight-comment">/// &lt;list type="bullet"&gt;</span> 
<span class="highlight-comment">///   &lt;item&gt;</span> 
<span class="highlight-comment">///     &lt;description&gt;Basic link: &lt;see href="http://SHFB.CodePlex.com"/&gt;&lt;/description&gt;</span> 
<span class="highlight-comment">///   &lt;/item&gt;</span> 
<span class="highlight-comment">///   &lt;item&gt;</span> 
<span class="highlight-comment">///     &lt;description&gt;Link with target: &lt;see href="http://SHFB.CodePlex.com/documentation"</span> 
<span class="highlight-comment">///       target="_self" /&gt;&lt;/description&gt;</span> 
<span class="highlight-comment">///   &lt;/item&gt;</span> 
<span class="highlight-comment">///   &lt;item&gt;</span> 
<span class="highlight-comment">///     &lt;description&gt;Link with alternate text: &lt;see href="http://SHFB.CodePlex.com/discussions"</span> 
<span class="highlight-comment">///       alt="Discuss SHFB on CodePlex" /&gt;&lt;/description&gt;</span> 
<span class="highlight-comment">///   &lt;/item&gt;</span> 
<span class="highlight-comment">///   &lt;item&gt;</span> 
<span class="highlight-comment">///     &lt;description&gt;Link with inner text: &lt;see href="http://SHFB.CodePlex.com"&gt;</span> 
<span class="highlight-comment">///       SHFB on CodePlex&lt;/see&gt;&lt;/description&gt;</span> 
<span class="highlight-comment">///   &lt;/item&gt;</span> 
<span class="highlight-comment">/// &lt;/list&gt;</span> 
<span class="highlight-comment">/// &lt;para&gt;Equivalent &lt;c&gt;seealso&lt;/c&gt; links are shown below.&lt;/para&gt;</span> 
<span class="highlight-comment">/// &lt;/remarks&gt;</span> 
<span class="highlight-comment">/// &lt;seealso href="http://SHFB.CodePlex.com"/&gt;</span> 
<span class="highlight-comment">/// &lt;seealso href="http://SHFB.CodePlex.com/documentation" target="_self" /&gt;</span> 
<span class="highlight-comment">/// &lt;seealso href="http://SHFB.CodePlex.com/discussions" alt="Discuss SHFB on CodePlex" /&gt;</span> 
<span class="highlight-comment">/// &lt;seealso href="http://SHFB.CodePlex.com"&gt;SHFB on CodePlex&lt;/seealso&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;</span> 
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> SeeElementExternalExample()
{
}</pre></div><div id="ID0EBCAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>/// &lt;summary&gt; 
/// This is used to demonstrate the external reference type of &lt;c&gt;see&lt;/c&gt; 
/// and &lt;c&gt;seealso&lt;/c&gt; elements. 
/// &lt;/summary&gt; 
/// &lt;remarks&gt; 
/// &lt;list type="bullet"&gt; 
///   &lt;item&gt; 
///     &lt;description&gt;Basic link: &lt;see href="http://SHFB.CodePlex.com"/&gt;&lt;/description&gt; 
///   &lt;/item&gt; 
///   &lt;item&gt; 
///     &lt;description&gt;Link with target: &lt;see href="http://SHFB.CodePlex.com/documentation" 
///       target="_self" /&gt;&lt;/description&gt; 
///   &lt;/item&gt; 
///   &lt;item&gt; 
///     &lt;description&gt;Link with alternate text: &lt;see href="http://SHFB.CodePlex.com/discussions" 
///       alt="Discuss SHFB on CodePlex" /&gt;&lt;/description&gt; 
///   &lt;/item&gt; 
///   &lt;item&gt; 
///     &lt;description&gt;Link with inner text: &lt;see href="http://SHFB.CodePlex.com"&gt; 
///       SHFB on CodePlex&lt;/see&gt;&lt;/description&gt; 
///   &lt;/item&gt; 
/// &lt;/list&gt; 
/// &lt;para&gt;Equivalent &lt;c&gt;seealso&lt;/c&gt; links are shown below.&lt;/para&gt; 
/// &lt;/remarks&gt; 
/// &lt;seealso href="http://SHFB.CodePlex.com"/&gt; 
/// &lt;seealso href="http://SHFB.CodePlex.com/documentation" target="_self" /&gt; 
/// &lt;seealso href="http://SHFB.CodePlex.com/discussions" alt="Discuss SHFB on CodePlex" /&gt; 
/// &lt;seealso href="http://SHFB.CodePlex.com"&gt;SHFB on CodePlex&lt;/seealso&gt; 
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt; 
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt; 
public void SeeElementExternalExample()
{
}</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBCAAABAA');</script><div id="ID0EACAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EACAAABAA_tabs"><div id="ID0EACAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">Language Keyword Examples</a></div></div><div id="ID0EACAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-comment">/// &lt;summary&gt;</span> 
<span class="highlight-comment">/// This demonstrates the &lt;c&gt;see&lt;/c&gt; element's &lt;c&gt;langword&lt;/c&gt; form</span> 
<span class="highlight-comment">/// &lt;/summary&gt;</span> 
<span class="highlight-comment">/// &lt;returns&gt;This method is &lt;see langword="static" /&gt; and always returns</span> 
<span class="highlight-comment">/// &lt;see langword="null"/&gt;.&lt;/returns&gt;</span> 
<span class="highlight-comment">/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;</span> 
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">string</span> SeeLangWordExamples()
{
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;
}</pre></div><div id="ID0EACAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>/// &lt;summary&gt; 
/// This demonstrates the &lt;c&gt;see&lt;/c&gt; element's &lt;c&gt;langword&lt;/c&gt; form 
/// &lt;/summary&gt; 
/// &lt;returns&gt;This method is &lt;see langword="static" /&gt; and always returns 
/// &lt;see langword="null"/&gt;.&lt;/returns&gt; 
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt; 
public static string SeeLangWordExamples()
{
    return null;
}</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAABAA');</script><a name="seeAlsoSection"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div></div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="82e685e9-d6c3-ac36-b61f-a644ae99516e.htm">SomethingHappened</a></div><div class="seeAlsoStyle"><a href="8656e14a-9f38-16d5-de9f-e5edd7bd3a5b.htm">OnSomethingHappened</a></div><div class="seeAlsoStyle"><a href="9cf4a679-3cd5-cb16-e520-78668c3a54c3.htm">SeeElementExternalExample</a></div><div class="seeAlsoStyle"><a href="db2af31b-f17c-302d-05d0-c3c18d8b450f.htm">SeeLangWordExamples</a></div><div class="seeAlsoStyle"><a href="3899aa6a-a42b-02b0-19f9-d45cf558b8bd.htm">DoSomething</a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="d297bc14-33aa-4152-ae36-9f658b15de87.htm">Inline Elements</a></div><div class="seeAlsoStyle"><a href="16cdb957-a35b-4c17-bf5e-ea511b0218e3.htm">seealso</a></div><div class="seeAlsoStyle"><a href="db2703b4-12bc-4cf5-8642-544b41002809.htm">conceptualLink</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="http://SHFB.CodePlex.com" target="_blank">[v2014.1.26.1] Sandcastle XML Comments Guide</a></p><div class="OH_feedbacklink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle XML Comments Guide">Eric@EWoodruff.us</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div><script src="//code.jquery.com/jquery-1.11.0.min.js"></script><script type="text/javascript">$(document).ready(function () {DocumentReady();});</script></body></html>