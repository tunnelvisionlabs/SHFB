<!DOCTYPE html ><html><head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><meta charset="utf-8"><link rel="shortcut icon" href="../icons/favicon.ico"><link rel="stylesheet" type="text/css" href="../styles/branding.css"><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css"><script type="text/javascript" src="../scripts/branding.js"> </script><title>AttachedPropertyComments</title><meta name="Language" content="en-us"><meta name="System.Keywords" content="miscellaneous elements, AttachedPropertyComments"><meta name="Microsoft.Help.Id" content="c0346d23-f376-4948-8f9a-d17b2f1acef3"><meta name="Description" content="This element is used to define the content that should appear on the auto-generated attached property member topic for a given WPF dependency property member."><meta name="Microsoft.Help.ContentType" content="Concepts"><meta name="BrandingAware" content="true"><link type="text/css" rel="stylesheet" href="../styles/highlight.css"><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css"><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle"><div class="pageHeader" id="PageHeader">Sandcastle XML Comments Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="4268757F-CE8D-4E6D-8502-4F7F2E22DDA3.htm" title="Sandcastle XML Comments Guide" tocid="roottoc">Sandcastle XML Comments Guide</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="9341fdc8-1571-405c-8e61-6a6b9b601b46.htm" title="Miscellaneous Elements" tocid="9341fdc8-1571-405c-8e61-6a6b9b601b46">Miscellaneous Elements</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3563f000-5677-4cd9-afd7-4e3f2a7fe4fc.htm" title="AttachedEventComments" tocid="3563f000-5677-4cd9-afd7-4e3f2a7fe4fc">AttachedEventComments</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="c0346d23-f376-4948-8f9a-d17b2f1acef3.htm" title="AttachedPropertyComments" tocid="c0346d23-f376-4948-8f9a-d17b2f1acef3">AttachedPropertyComments</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="6e76ff26-d4f8-491e-ae81-b06086ecf902.htm" title="Code Contract Elements" tocid="6e76ff26-d4f8-491e-ae81-b06086ecf902">Code Contract Elements</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="db2703b4-12bc-4cf5-8642-544b41002809.htm" title="conceptualLink" tocid="db2703b4-12bc-4cf5-8642-544b41002809">conceptualLink</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a8ade450-e201-401a-923d-1a1169ef7828.htm" title="exclude" tocid="a8ade450-e201-401a-923d-1a1169ef7828">exclude</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="0522f3bf-0a57-4d70-a2a5-d64a14c5bcc9.htm" title="filterpriority" tocid="0522f3bf-0a57-4d70-a2a5-d64a14c5bcc9">filterpriority</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3de64a85-dafb-4a01-85dc-7f69a76ef790.htm" title="include" tocid="3de64a85-dafb-4a01-85dc-7f69a76ef790">include</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="86453FFB-B978-4A2A-9EB5-70E118CA8073.htm" title="inheritdoc" tocid="86453FFB-B978-4A2A-9EB5-70E118CA8073">inheritdoc</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5b11b235-2b6c-4dfc-86b0-2e7dd98f2716.htm" title="overloads" tocid="5b11b235-2b6c-4dfc-86b0-2e7dd98f2716">overloads</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8c9273f3-0000-43cd-bb53-932b80855297.htm" title="token" tocid="8c9273f3-0000-43cd-bb53-932b80855297">token</a></div></div><div id="TocResizableEw" class="tocResizableEw" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="Sandcastle XML Comments Guide" src="../icons/Sandcastle.jpg"></td><td class="titleColumn">AttachedPropertyComments</td></tr></table><span class="introStyle"></span><div class="introduction"><p>This element is used to define the content that should appear on the auto-generated attached property
member topic for a given WPF dependency property member.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><p>This top-level element is valid on any dependency property member.  The member on which the element
appears should have its own set of member-specific XML comments as well.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">AttachedPropertyComments</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">summary</span><span class="highlight-xml-bracket">&gt;</span>
  Summary description
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">summary</span><span class="highlight-xml-bracket">&gt;</span>
  [<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">remarks</span><span class="highlight-xml-bracket">&gt;</span>Optional remarks<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">remarks</span><span class="highlight-xml-bracket">&gt;</span>]
  [<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">example</span><span class="highlight-xml-bracket">&gt;</span>Optional examples<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">example</span><span class="highlight-xml-bracket">&gt;</span>]
  [... other top-level comments elements as needed ...]
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">AttachedPropertyComments</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACADAAA");</script><p>Include any top-level XML comments elements as you would on a standard member.  These elements will
be formatted in an identical fashion and will appear in the auto-generated attached property member topic.</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note"> Note</th></tr><tr><td><p>This is a custom XML comments element implemented by the <a href="http://SHFB.CodePlex.com" target="_blank">Sandcastle Help File Builder</a>.  It will not appear
in the list of valid elements for XML comments IntelliSense.</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="Remarks"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Because the attached property and attached event members of WPF classes are compiler-generated,
there is no way to associate XML comments with them directly without managing a standalone XML comments file.
While it is possible to do this, it is less convenient than keeping the comments in the code.  The help file
builder provides a solution to this through its <strong>GenerateInheritedDocs</strong> tool.  As part
of the process of generating inherited documentation, the tool will look for attached property and attached event
fields.  If it finds them, it will automatically inherit their comments for the related compiler-generated
members as default comments to prevent a "missing comments" warning.</p><p>In addition, if it finds comments for those field members, it will check for an
<span class="code">AttachedPropertyComments</span> element (for attached properties) or an
<span class="code">AttachedEventComments</span> element (for attached events) and, if found, will use the XML
comments nested within those elements for the related compiler-generated members.  This allows you to provide
comments for the field member and the related compiler-generated member that are entirely different but are
managed from within the code.</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note"> Note</th></tr><tr><td><p>Because the attached property and event members are compiler-generated, you must fully qualify
their names if you want to create a link to them with a <span class="code">see</span> element as shown in the
example below.</p></td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">Example</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This defines the</span>
<span class="highlight-comment">/// &lt;see cref="P:XMLCommentsExamples.DocumentationInheritance.AttachedEventsAndPropertiesTest.IsBroughtIntoViewWhenSelected"/&gt;</span>
<span class="highlight-comment">/// attached property.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;AttachedPropertyComments&gt;</span>
<span class="highlight-comment">/// &lt;summary&gt;This attached property indicates whether or not a tree view item is brought into</span>
<span class="highlight-comment">/// view when selected.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;value&gt;The default value is false&lt;/value&gt;</span>
<span class="highlight-comment">/// &lt;conceptualLink target="c0346d23-f376-4948-8f9a-d17b2f1acef3" /&gt;</span>
<span class="highlight-comment">/// &lt;/AttachedPropertyComments&gt;</span>
<span class="highlight-comment">/// &lt;conceptualLink target="c0346d23-f376-4948-8f9a-d17b2f1acef3" /&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> DependencyProperty IsBroughtIntoViewWhenSelectedProperty =
    DependencyProperty.RegisterAttached(
    <span class="highlight-literal">"IsBroughtIntoViewWhenSelected"</span>,
    <span class="highlight-keyword">typeof</span>(<span class="highlight-keyword">bool</span>),
    <span class="highlight-keyword">typeof</span>(AttachedEventsAndPropertiesTest),
    <span class="highlight-keyword">new</span> UIPropertyMetadata(<span class="highlight-keyword">false</span>, OnIsBroughtIntoViewWhenSelectedChanged));

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Get the property value</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="treeViewItem"&gt;The tree view item&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt;The property value&lt;/returns&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">bool</span> GetIsBroughtIntoViewWhenSelected(TreeViewItem treeViewItem)
{
    <span class="highlight-keyword">return</span> (<span class="highlight-keyword">bool</span>)treeViewItem.GetValue(IsBroughtIntoViewWhenSelectedProperty);
}

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Sets the property value</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="treeViewItem"&gt;The tree view item&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="value"&gt;The property value&lt;/param&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> SetIsBroughtIntoViewWhenSelected(
  TreeViewItem treeViewItem, <span class="highlight-keyword">bool</span> <span class="highlight-keyword">value</span>)
{
    treeViewItem.SetValue(IsBroughtIntoViewWhenSelectedProperty, <span class="highlight-keyword">value</span>);
}

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Connect or disconnect the event handler when the selected state changes</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="depObj"&gt;The dependency object&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="e"&gt;The event arguments&lt;/param&gt;</span>
<span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> OnIsBroughtIntoViewWhenSelectedChanged(
  DependencyObject depObj, DependencyPropertyChangedEventArgs e)
{
    TreeViewItem item = depObj <span class="highlight-keyword">as</span> TreeViewItem;

    <span class="highlight-keyword">if</span>(item == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span>;

    <span class="highlight-keyword">if</span>(e.NewValue <span class="highlight-keyword">is</span> <span class="highlight-keyword">bool</span> == <span class="highlight-keyword">false</span>)
        <span class="highlight-keyword">return</span>;

    <span class="highlight-keyword">if</span>((<span class="highlight-keyword">bool</span>)e.NewValue)
        item.Selected += OnTreeViewItemSelected;
    <span class="highlight-keyword">else</span>
        item.Selected -= OnTreeViewItemSelected;
}

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Bring the item into view</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="sender"&gt;The sender of the event&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="e"&gt;The event arguments&lt;/param&gt;</span>
<span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> OnTreeViewItemSelected(<span class="highlight-keyword">object</span> sender, RoutedEventArgs e)
{
    <span class="highlight-comment">// Only react to the Selected event raised by the TreeViewItem</span>
    <span class="highlight-comment">// whose IsSelected property was modified. Ignore all ancestors</span>
    <span class="highlight-comment">// who are merely reporting that a descendant's Selected fired.</span>
    <span class="highlight-keyword">if</span>(!Object.ReferenceEquals(sender, e.OriginalSource))
        <span class="highlight-keyword">return</span>;

    TreeViewItem item = e.OriginalSource <span class="highlight-keyword">as</span> TreeViewItem;

    <span class="highlight-keyword">if</span>(item != <span class="highlight-keyword">null</span>)
        item.BringIntoView();
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="ca2575b2-2ea9-27d4-8c28-8a52b8472762.htm">IsBroughtIntoViewWhenSelected</a></div><div class="seeAlsoStyle"><a href="b4603b26-6819-f433-915d-552cf3796fd6.htm">IsBroughtIntoViewWhenSelectedProperty</a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="9341fdc8-1571-405c-8e61-6a6b9b601b46.htm">Miscellaneous Elements</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://SHFB.CodePlex.com" target="_blank">[v2014.1.26.1] Sandcastle XML Comments Guide</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle XML Comments Guide">Eric@EWoodruff.us</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>