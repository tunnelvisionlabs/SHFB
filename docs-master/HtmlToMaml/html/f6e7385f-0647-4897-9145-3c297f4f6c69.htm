<html><head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><link rel="shortcut icon" href="../icons/favicon.ico"><link rel="stylesheet" type="text/css" href="../styles/branding.css"><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css"><script type="text/javascript" src="../scripts/branding.js"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Context-based Conversions</title><meta name="Language" content="en-us"><meta name="System.Keywords" content="context-based conversion, anchor"><meta name="System.Keywords" content="context-based conversion, code"><meta name="System.Keywords" content="context-based conversion, heading"><meta name="System.Keywords" content="context-based conversion, image"><meta name="System.Keywords" content="context-based conversion, see also"><meta name="Microsoft.Help.Id" content="f6e7385f-0647-4897-9145-3c297f4f6c69"><meta name="Description" content="The following HTML elements must be converted based on their context within the topic. Since the context is hard to translate into an easily defined rule in the rules file, the elements described in this topic are handled by the application itself."><meta name="Microsoft.Help.ContentType" content="Concepts"><meta name="BrandingAware" content="'true'"><link type="text/css" rel="stylesheet" href="../styles/highlight.css"><script type="text/javascript" src="../scripts/highlight.js"></script><meta name="SelfBranded" content="true"></head><body onload="onLoad()"><header class="ux-header"><div class="header-top-bar">HTML to MAML Converter</div></header><div class="OH_outerDiv" style="padding: 35px 20px 0 20px;"><div class="OH_leftNav" id="LeftNav">
  <div id="tocnav">
    <div class="toclevel0" data-toclevel="0" style="padding-left: 0px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="83b3d408-4e02-42d2-beed-0b13294f23f2.htm" title="HTML to MAML Converter" tocid="roottoc">HTML to MAML Converter</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;" data-childrenloaded="true"><a class="toc_expanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="dcded896-51a7-4af4-b1dc-9a41193210cc.htm" title="The Conversion Process" tocid="dcded896-51a7-4af4-b1dc-9a41193210cc">The Conversion Process</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="76834da6-a4c8-4c65-a6b4-c09024100b64.htm" title="Metadata Topic Elements" tocid="76834da6-a4c8-4c65-a6b4-c09024100b64">Metadata Topic Elements</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="1BA74307-2C62-40a9-AA25-3B25DFB1C1C6.htm" title="Conversion Rule Elements" tocid="1BA74307-2C62-40a9-AA25-3B25DFB1C1C6">Conversion Rule Elements</a></div><div class="toclevel2 current" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="f6e7385f-0647-4897-9145-3c297f4f6c69.htm" title="Context-based Conversions" tocid="f6e7385f-0647-4897-9145-3c297f4f6c69">Context-based Conversions</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="b7e46af5-0901-41e8-afb9-a79a837aff9e.htm" title="Additional Output Files" tocid="b7e46af5-0901-41e8-afb9-a79a837aff9e">Additional Output Files</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="a5f36b5f-5551-43c4-a938-c1451571b97f.htm" title="Warnings and To Do Items" tocid="a5f36b5f-5551-43c4-a938-c1451571b97f">Warnings and To Do Items</a></div></div></div><div id="TocResize" class="OH_TocResize"><img id="ResizeImageIncrease" src="../icons/open.gif" onclick="onIncreaseToc()" alt="Expand" title="Expand"><img id="ResizeImageReset" src="../icons/close.gif" style="display:none" onclick="onResetToc()" alt="Minimize" title="Minimize"></div><div class="OH_outerContent" id="OuterContent" style="margin-left: 280px;"><h1 class="title">Context-based Conversions</h1><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="introduction"><p>The following HTML elements must be converted based on their context within the topic.  Since
the context is hard to translate into an easily defined rule in the rules file, the elements described in
this topic are handled by the application itself.  As such, these elements should not appear in any of the
previously defined rules.</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Anchor">Anchor Elements</a></li><li class="outlineSectionEntry"><a href="#Code">Code Elements</a></li><li class="outlineSectionEntry"><a href="#Heading">Heading Elements</a></li><li class="outlineSectionEntry"><a href="#Image">Image Elements</a></li><li class="outlineSectionEntry"><a href="#SeeAlso">See Elements</a></li></ul><div class="alert"><table><tr><th><img src="../icons/alert_note.gif" alt="Note"> <strong>Note</strong></th></tr><tr><td><p>All element names are matched case-insensitively.</p></td></tr></table></div></div><a id="Anchor"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Anchor Elements</div></div><p>HTML anchor elements (<span class="code">a</span>) are replaced as follows:</p><ul><li><p>Anchors with a <span class="code">name</span> attribute are assumed to be in-page link targets.
The MAML equivalent of such a link target is an <span class="code">address</span> attribute on an element
such as <span class="code">section</span>, <span class="code">definedTerm</span>,
<span class="code">listItem</span>, etc.  Trying to place an address attribute on the appropriate element is
almost impossible so these anchor types are replaced with a "<span class="code">&lt;!-- TODO: --&gt;</span>"
comment for later review.  A warning is also written to the log file.</p><p>An exception is targets inside of heading HTML elements.  If properly formatted, these will be
converted to <span class="code">address</span> elements on the related <span class="code">section</span>
element when the heading elements are processed (<a href="#Heading">see below</a>).</p></li><li><p>If the link's URL contains "://", starts with "mailto:", or the link specifies a
<span class="code">target</span> attribute it is converted to an <span class="code">externalLink</span>.</p></li><li><p>All other links are converted to <span class="code">link</span> elements.  If the topic ID cannot
be resolved using the filename from the HTML <span class="code">href</span> attribute, it is replaced with a
"<span class="code">&lt;!-- TODO: --&gt;</span>" comment for later review and a warning is written to the log
file.</p></li></ul><div class="alert"><table><tr><th><img src="../icons/alert_note.gif" alt="Note"> <strong>Note</strong></th></tr><tr><td><p>Link inner text will be retained if it differs from the target topic's title.  In addition, an
in-page link suffix will be retained (i.e. <em>SomePage.htm#InPageLink</em>).</p></td></tr></table></div><a id="Code"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Code Elements</div></div><p>The normal <span class="code">code</span> HTML element is equivalent to the MAML
<span class="code">codeInline</span> element.  However, to support conversion of the <a href="http://SHFB.CodePlex.com" target="_blank">Sandcastle Help File Builder</a>
option of including code blocks from external files, this element is replaced based on the following
contexts:</p><ul><li><p>If no attributes are present on the element and no carriage return/line feeds are present in the
element's inner text, it is replaced with a MAML <span class="code">codeInline</span> element.</p></li><li><p>If any attributes are present on the HTML element or if its inner text contains multiple carriage
return/line feeds, it is replaced with a MAML <span class="code">code</span> element and any attributes are
preserved.</p></li><li><p>In the event that no attributes are present and only a single carriage return/line feed pair are
present in the inner text, it is assumed that the value simply spans a line break and it is replaced with a
<span class="code">codeInline</span> element instead.</p></li></ul><a id="Heading"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Heading Elements</div></div><p>HTML heading elements (<span class="code">h1</span> through <span class="code">h6</span>) are
replaced with a <span class="code">section</span> element.  The content of the heading element becomes the
section title and is placed in the section's <span class="code">title</span> element.  The text following the
heading becomes the content of the section.  When a new heading element is encountered, closing section
elements are inserted as needed.  Closing section elements are also added to the end of the body text if at
least one heading was encountered to close off the final section.</p><p>Anchor elements are processed before heading elements.  As such, if a named anchor is replaced
with a To Do comment and it appears within the heading tag, it will be converted to an <span class="code">address</span>
attribute on the section automatically as shown in the example below.  This saves you from having to do it
manually but you should still review the update to make sure that it is appropriate.</p><div id="ID0ECGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0ECGAAABAA_tabs"><div id="ID0ECGAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">Original HTML</a></div></div><div id="ID0ECGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0ECGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre>See the <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">a</span> <span class="highlight-xml-attribute-name">href</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"#BuildLogFile"</span><span class="highlight-xml-bracket">&gt;</span>BuildLogFile<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">a</span><span class="highlight-xml-bracket">&gt;</span> property

.
.
.

<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">h3</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">a</span> <span class="highlight-xml-attribute-name">class</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Reference"</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BuildLogFile"</span><span class="highlight-xml-bracket">&gt;</span>The BuildLogFile Property<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">a</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">h3</span><span class="highlight-xml-bracket">&gt;</span> 
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">p</span><span class="highlight-xml-bracket">&gt;</span>Section content<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">p</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0ECGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>See the &lt;a href="#BuildLogFile"&gt;BuildLogFile&lt;/a&gt; property

.
.
.

&lt;h3&gt;&lt;a class="Reference" name="BuildLogFile"&gt;The BuildLogFile Property&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Section content&lt;/p&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECGAAABAA');</script><div id="ID0EBGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EBGAAABAA_tabs"><div id="ID0EBGAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">Converted MAML</a></div></div><div id="ID0EBGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EBGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre>See the <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">link</span> <span class="highlight-xml-attribute-name">xlink:href</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"#BuildLogFile"</span><span class="highlight-xml-bracket">&gt;</span>BuildLogFile<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">link</span><span class="highlight-xml-bracket">&gt;</span> property

.
.
.

<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">section</span> <span class="highlight-xml-attribute-name">address</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"BuildLogFile"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-comment">&lt;!--h3--&gt;</span> 
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">title</span><span class="highlight-xml-bracket">&gt;</span>The BuildLogFile Property<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">title</span><span class="highlight-xml-bracket">&gt;</span> 
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">content</span><span class="highlight-xml-bracket">&gt;</span> 
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">para</span><span class="highlight-xml-bracket">&gt;</span>Section content<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">para</span><span class="highlight-xml-bracket">&gt;</span> 
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">content</span><span class="highlight-xml-bracket">&gt;</span> 
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">section</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EBGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>See the &lt;link xlink:href="#BuildLogFile"&gt;BuildLogFile&lt;/link&gt; property

.
.
.

&lt;section address="BuildLogFile"&gt;&lt;!--h3--&gt; 
  &lt;title&gt;The BuildLogFile Property&lt;/title&gt; 
  &lt;content&gt; 
&lt;para&gt;Section content&lt;/para&gt; 
  &lt;/content&gt; 
&lt;/section&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBGAAABAA');</script><p>MAML sections can be nested within one another.  However, attempting to do this during conversion
would be very difficult and would most likely result in changes that were not intended or are not
appropriate.  As such, no attempt is made to nest sections with a higher heading number into prior ones with
a lower heading number (i.e nesting <span class="code">h2</span> sections within an <span class="code">h1</span>
section).  The heading element that caused the section to be created is added in a comment following the
<span class="code">section</span> element.  You can review the topic after conversion to decide whether to
leave the topic as it is or rework the content to nest sections within one another.</p><a id="Image"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Image Elements</div></div><p>HTML image elements (<span class="code">img</span>) are replaced with an <span class="code">externalLink</span>
if the <span class="code">src</span> attribute contains "://".  If not, the image is assumed to be local to
the project and is converted to a <span class="code">mediaLink</span>.  Note that it is not possible to
determine whether or not to use a <span class="code">mediaLinkInline</span> element instead.  As such, you
will need to update the link during the review after conversion.  For <span class="code">mediaLink</span>
elements, you may need to add a <span class="code">caption</span> element if needed and other attributes to
properly set the image alignment as well.</p><p>When a new image is encountered, it is added to the media content file created by the conversion
process and the image file is copied to the <em>Media\</em> folder under the destination folder.
The source image location is determined by combining the source conversion folder with the path from the
<span class="code">src</span> attribute.  If the image file cannot be found, the replacement element is
prefixed with a "<span class="code">&lt;!-- TODO: --&gt;</span>" comment noting the missing file and a
warning is written to the log file.</p><a id="SeeAlso"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Elements</div></div><p>The <a href="http://SHFB.CodePlex.com" target="_blank">Sandcastle Help File Builder</a> supports <span class="code">see</span> elements within additional content
HTML files.  When encountered, these are converted to links to the matching API member topics.  To match
this behavior, if a <span class="code">see</span> element is encountered during conversion, it is converted
to an appropriate <span class="code">codeEntityReference</span> element.</p><p>The help file builder has the ability to resolve a reference based on a partial name.  However,
MAML requires that the name be fully qualified.  As such, if a partial name is encountered, it will still be
converted but a warning will be written to the log file.  These will need to be fixed during the review to
replace them with their fully qualified names.</p><a name="seeAlsoSection"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="dcded896-51a7-4af4-b1dc-9a41193210cc.htm">The Conversion Process</a></div><div class="seeAlsoStyle"><a href="1BA74307-2C62-40a9-AA25-3B25DFB1C1C6.htm">Conversion Rule Elements</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="http://Sandcastle.CodePlex.com" target="_blank">Copyright © 2008-2014, Eric Woodruff, All rights reserved</a></p><div class="OH_feedbacklink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=HTML to MAML Converter">Eric@EWoodruff.us</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div><script src="//code.jquery.com/jquery-1.11.0.min.js"></script><script type="text/javascript">$(document).ready(function () {DocumentReady();});</script></body></html>