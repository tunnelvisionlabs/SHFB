<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><link rel="SHORTCUT ICON" href="./../icons/favicon.ico"><link rel="stylesheet" type="text/css" href="./../styles/branding.css"><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css"><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Schema Extensibility</title><meta name="Language" content="en-us"><meta name="System.Keywords" content="extensibility"><meta name="Microsoft.Help.Id" content="53e9f04f-fbc4-480d-9653-1547046526f1"><meta name="Description" content="This topic will explain how you can change the MAML schema so that you can use elements from other namespaces as well."><meta name="Microsoft.Help.ContentType" content="Concepts"><meta name="BrandingAware" content="'true'"><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css"><link type="text/css" rel="stylesheet" href="./../styles/highlight.css"><script type="text/javascript" src="../scripts/highlight.js"></script><meta name="SelfBranded" content="true"></head><body onload="onLoad()" class="primary-mtps-offline-document"><header class="ux-header"><div class="header-top-bar">Sandcastle MAML Guide</div></header><div class="OH_outerDiv" style="padding: 35px 20px 0 20px;"><div class="OH_leftNav" id="LeftNav">
  <div id="tocnav">
    <div class="toclevel0" data-toclevel="0" style="padding-left: 0px;" data-childrenloaded="true"><a class="toc_expanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="303c996a-2911-4c08-b492-6496c82b3edb.htm" title="Sandcastle MAML Guide" tocid="roottoc">Sandcastle MAML Guide</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="303c996a-2911-4c08-b492-6496c82b3edb.htm" title="Welcome" tocid="303c996a-2911-4c08-b492-6496c82b3edb">Welcome</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="aa8250ea-dfe4-46c0-b2eb-b4e975f0db1e.htm" title="License Agreement" tocid="aa8250ea-dfe4-46c0-b2eb-b4e975f0db1e">License Agreement</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="b00070c7-9c5e-4b49-ad5c-f55fa866f062.htm" title="Known Issues and Bugs" tocid="b00070c7-9c5e-4b49-ad5c-f55fa866f062">Known Issues and Bugs</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="86752a38-eba3-4174-bcbf-79ec8428ecf9.htm" title="Conceptual Content File Types" tocid="86752a38-eba3-4174-bcbf-79ec8428ecf9">Conceptual Content File Types</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="b32a73b8-fc26-4c98-912c-d595fc1a17c2.htm" title="Block Elements" tocid="b32a73b8-fc26-4c98-912c-d595fc1a17c2">Block Elements</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="b96d95c0-ec3c-4846-998a-4b43548bfa0e.htm" title="Common Inline Elements" tocid="b96d95c0-ec3c-4846-998a-4b43548bfa0e">Common Inline Elements</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="ba6a58eb-3301-4397-8ac5-d174d6dff755.htm" title="Media Elements" tocid="ba6a58eb-3301-4397-8ac5-d174d6dff755">Media Elements</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="3be5c58d-d6af-45a4-ac51-f219a75c4c4d.htm" title="Link Elements" tocid="3be5c58d-d6af-45a4-ac51-f219a75c4c4d">Link Elements</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="9d0dc122-7829-4b22-af2e-6685867116f8.htm" title="Miscellaneous Elements" tocid="9d0dc122-7829-4b22-af2e-6685867116f8">Miscellaneous Elements</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="746fc19e-2670-440b-8277-a1ef7dc074d5.htm" title="Visual Studio IntelliSense" tocid="746fc19e-2670-440b-8277-a1ef7dc074d5">Visual Studio IntelliSense</a></div><div class="toclevel1 current" data-toclevel="1" style="padding-left: 13px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="53e9f04f-fbc4-480d-9653-1547046526f1.htm" title="Schema Extensibility" tocid="53e9f04f-fbc4-480d-9653-1547046526f1">Schema Extensibility</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="dc4fcc96-283e-4202-9ecc-08a65e0c9313.htm" title="Links to Resources" tocid="dc4fcc96-283e-4202-9ecc-08a65e0c9313">Links to Resources</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="847c2d90-c877-4369-a3ab-f7373b6547df.htm" title="Making a Donation" tocid="847c2d90-c877-4369-a3ab-f7373b6547df">Making a Donation</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="ba47a67c-4825-4fcd-b806-2b2e02d4373a.htm" title="Version History" tocid="ba47a67c-4825-4fcd-b806-2b2e02d4373a">Version History</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="66bf98c7-7179-4940-8767-7085052f2f53.htm" title="Glossary" tocid="66bf98c7-7179-4940-8767-7085052f2f53">Glossary</a></div></div></div><div id="TocResize" class="OH_TocResize"><img id="ResizeImageIncrease" src="../icons/open.gif" onclick="onIncreaseToc()" alt="Expand" title="Expand"><img id="ResizeImageReset" src="../icons/close.gif" style="display:none" onclick="onResetToc()" alt="Minimize" title="Minimize"></div><div class="OH_outerContent" id="OuterContent" style="margin-left: 280px;"><h1 class="title">Schema Extensibility</h1><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="introduction"><p>
				This topic will explain how you can change the MAML schema so that you can use elements from other
				namespaces as well. This is useful when extending Sandcastle with build components that provide new
				elements because it still allows you to validate your topic files.
			</p><div class="alert"><table><tr><th><img class="mtps-img-src" src="./../icons/alert_note.gif" alt="Tip"> <strong>Tip</strong></th></tr><tr><td>
					The Sandcastle version of the MAML schema files already contain the necessary changes.
				</td></tr></table></div></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">XML Schema Extensibility</div></div><p>
					In general, XML schema provides the <span class="code">any</span> element
					for declaring extensibility points in your schema. The
					<span class="code">any</span> element has two attributes that control the
					extensibility contract.
				</p><p>
					The <span class="code">namespace</span> attribute allows you to either
					explicitly specify a closed set of namespaces that are allowed or to specify
					one of these pseudo-URIs:
				</p><dl class="authored"><dt>##local</dt><dd>
							This allows only to use elements that do not reside in any namespace.
							This is not what we want to use because it forces build component
							authors to declare all elements in the empty namespace. This could
							easily lead to name clashes between different build components.
						</dd><dt>##targetNamespace</dt><dd>
							This only allows elements from the target namespace of the declaring
							schema. For our purposes this is useless because it would only allow
							elements from the MAML namespace
							(http://ddue.schemas.microsoft.com/authoring/2003/5).
						</dd><dt>##any</dt><dd>
							This allows any namespace, including the target namespace of the
							declaring schema. We do not want to use this because it would also
							allow to use any element from the
							MAML namespace
							(http://ddue.schemas.microsoft.com/authoring/2003/5)
							itself and hence undermine the schema validation for MAML.
						</dd><dt>##other</dt><dd>
							This allows any namespaces except the target namespace of the declaring
							schema. For our purposes this is ideal because it allows only to use
							elements from any namespace except the MAML namespace
							(http://ddue.schemas.microsoft.com/authoring/2003/5).
						</dd></dl><p>
					The <span class="code">processContents</span> attribute allows you to control
					the validation requirements. It can have one of following values:
				</p><dl class="authored"><dt>skip</dt><dd>
							This is the least restrictive value. It specifies that the schema processor
							should not try to validate the contents of the new element, even if it is
							able to find a schema for it.
						</dd><dt>strict</dt><dd>
							This is the most restrictive setting. It requires the schema processor to
							always validate the contents of the new element. If it is not able to
							find such a schema an error is reported during validation.
						</dd><dt>lax</dt><dd>
							This is a compromise between the settings <span class="code">skip</span> and
							<span class="code">strict</span>. The schema processor will validate the schema
							if it is able to find a schema for the new element and will skip it if cannot
							find such a schema. For our purposes this is ideal because it allows build component
							authors to provide a schema for validation but does not force them to do so.
						</dd></dl><p>
					Therefore, our extensibility points will all look like this:
				</p><div id="ID0EAFAAAAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EAFAAAAA_tabs"><div id="ID0EAFAAAAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EAFAAAAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAFAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAFAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAFAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAFAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAFAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAFAAAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">any</span> <span class="highlight-xml-attribute-name">namespace</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"##other"</span> <span class="highlight-xml-attribute-name">processContents</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"lax"</span> <span class="highlight-xml-bracket">/&gt;</span></pre></div><div id="ID0EAFAAAAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;any namespace="##other" processContents="lax" /&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAFAAAAA');</script><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Extending Inline Text</div></div><p>
					Build components might add elements that you can use inside a
					http://ddue.schemas.microsoft.com/authoring/2003/5#E/para
					element. Examples for such elements are:
				</p><dl class="authored"><dt>Linking</dt><dd>
							These are elements that allow you to link to other topics. MAML itself already provides
							several elements for this purpose, such as the
							http://ddue.schemas.microsoft.com/authoring/2003/5#E/link
							element to link to conceptual topics, the
							http://ddue.schemas.microsoft.com/authoring/2003/5#E/codeEntityReference
							element to link to managed code APIs, and the
							http://ddue.schemas.microsoft.com/authoring/2003/5#E/externalLink
							element to link to some location in the internet.
						</dd><dt>Semantics</dt><dd>
							This category includes elements that are used to associate pieces of text with semantics.
							In many cases these semantics are made visible through a consistent formatting, such as italics
							or bold text. Amongst others MAML itself provides the
							http://ddue.schemas.microsoft.com/authoring/2003/5#E/localUri
							element for marking text as representing local paths and the
							http://ddue.schemas.microsoft.com/authoring/2003/5#E/ui
							element for marking text as representing elements in your user interface.
						</dd></dl><p>
					To extend the
					http://ddue.schemas.microsoft.com/authoring/2003/5#E/para
					element we will extend the underlying type
					http://ddue.schemas.microsoft.com/authoring/2003/5#T/inlineType.
				</p><p>
					Open the file <em>inline.xsd</em>, goto line 60, and add the <span class="code">any</span>
					element to the type:
				</p><div id="ID0EAEAAAAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EAEAAAAA_tabs"><div id="ID0EAEAAAAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EAEAAAAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAEAAAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">complexType</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"inlineType"</span> <span class="highlight-xml-attribute-name">mixed</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"true"</span><span class="highlight-xml-bracket">&gt;</span> 
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">annotation</span><span class="highlight-xml-bracket">&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">documentation</span><span class="highlight-xml-bracket">&gt;</span>
            The inlineType complexType describes a simple inline-only
            content model. It provides both text and elements with
            similarly simple content models.
        <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">documentation</span><span class="highlight-xml-bracket">&gt;</span> 
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">annotation</span><span class="highlight-xml-bracket">&gt;</span> 
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">choice</span> <span class="highlight-xml-attribute-name">minOccurs</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">maxOccurs</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"unbounded"</span><span class="highlight-xml-bracket">&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">group</span> <span class="highlight-xml-attribute-name">ref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:inlineGroup"</span><span class="highlight-xml-bracket">/&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">element</span> <span class="highlight-xml-attribute-name">ref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:sharedContent"</span><span class="highlight-xml-bracket">/&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">element</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"conditionalSection"</span><span class="highlight-xml-bracket">&gt;</span> 
            <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">complexType</span><span class="highlight-xml-bracket">&gt;</span> 
                <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">sequence</span><span class="highlight-xml-bracket">&gt;</span> 
                    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">element</span> <span class="highlight-xml-attribute-name">ref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:conditions"</span><span class="highlight-xml-bracket">/&gt;</span> 
                    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">element</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"conditionalContent"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:inlineType"</span><span class="highlight-xml-bracket">/&gt;</span> 
                <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">sequence</span><span class="highlight-xml-bracket">&gt;</span> 
            <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">complexType</span><span class="highlight-xml-bracket">&gt;</span> 
        <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">element</span><span class="highlight-xml-bracket">&gt;</span> 
        <span class="highlight-xml-comment">&lt;!-- PATCH HERE --&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">any</span> <span class="highlight-xml-attribute-name">namespace</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"##other"</span> <span class="highlight-xml-attribute-name">processContents</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"lax"</span> <span class="highlight-xml-bracket">/&gt;</span> 
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">choice</span><span class="highlight-xml-bracket">&gt;</span> 
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">attributeGroup</span> <span class="highlight-xml-attribute-name">ref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:contentIdentificationSharingAndConditionGroup"</span><span class="highlight-xml-bracket">/&gt;</span> 
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">complexType</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EAEAAAAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;complexType name="inlineType" mixed="true"&gt; 
    &lt;annotation&gt; 
        &lt;documentation&gt;
            The inlineType complexType describes a simple inline-only
            content model. It provides both text and elements with
            similarly simple content models.
        &lt;/documentation&gt; 
    &lt;/annotation&gt; 
    &lt;choice minOccurs="0" maxOccurs="unbounded"&gt; 
        &lt;group ref="maml:inlineGroup"/&gt; 
        &lt;element ref="maml:sharedContent"/&gt; 
        &lt;element name="conditionalSection"&gt; 
            &lt;complexType&gt; 
                &lt;sequence&gt; 
                    &lt;element ref="maml:conditions"/&gt; 
                    &lt;element name="conditionalContent" type="maml:inlineType"/&gt; 
                &lt;/sequence&gt; 
            &lt;/complexType&gt; 
        &lt;/element&gt; 
        &lt;!-- PATCH HERE --&gt; 
        &lt;any namespace="##other" processContents="lax" /&gt; 
    &lt;/choice&gt; 
    &lt;attributeGroup ref="maml:contentIdentificationSharingAndConditionGroup"/&gt; 
&lt;/complexType&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAEAAAAA');</script><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Extending Related Topics</div></div><p>
					For build components that provide elements for linking we also want to be able to
					use them inside the
					http://ddue.schemas.microsoft.com/authoring/2003/5#E/relatedTopics
					element. To do this, we will extend the type
					http://ddue.schemas.microsoft.com/authoring/2003/5#T/relatedTopicsType.
				</p><p>
					Open the file <em>hierarchy.xsd</em>, goto line 123 and add the <span class="code">any</span>
					element to the type:
				</p><div id="ID0EADAAAAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EADAAAAA_tabs"><div id="ID0EADAAAAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EADAAAAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EADAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EADAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EADAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EADAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EADAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EADAAAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">complexType</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"relatedTopicsType"</span> <span class="highlight-xml-attribute-name">mixed</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span> 
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">choice</span> <span class="highlight-xml-attribute-name">minOccurs</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">maxOccurs</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"unbounded"</span><span class="highlight-xml-bracket">&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">group</span>   <span class="highlight-xml-attribute-name">ref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:relatedTopicLinkGroup"</span><span class="highlight-xml-bracket">/&gt;</span> 
        <span class="highlight-xml-comment">&lt;!-- PATCH HERE --&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">any</span> <span class="highlight-xml-attribute-name">namespace</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"##other"</span> <span class="highlight-xml-attribute-name">processContents</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"lax"</span> <span class="highlight-xml-bracket">/&gt;</span> 
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">choice</span><span class="highlight-xml-bracket">&gt;</span> 
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">attributeGroup</span> <span class="highlight-xml-attribute-name">ref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:contentIdentificationSharingAndConditionGroup"</span><span class="highlight-xml-bracket">/&gt;</span> 
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">complexType</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EADAAAAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;complexType name="relatedTopicsType" mixed="false"&gt; 
    &lt;choice minOccurs="0" maxOccurs="unbounded"&gt; 
        &lt;group   ref="maml:relatedTopicLinkGroup"/&gt; 
        &lt;!-- PATCH HERE --&gt; 
        &lt;any namespace="##other" processContents="lax" /&gt; 
    &lt;/choice&gt; 
    &lt;attributeGroup ref="maml:contentIdentificationSharingAndConditionGroup"/&gt; 
&lt;/complexType&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EADAAAAA');</script><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Extending Section Structure</div></div><p>
					Last but not least build components might also provide elements that allow you to build a
					structure. For this purpose MAML itself already provides the
					http://ddue.schemas.microsoft.com/authoring/2003/5#E/table,
					http://ddue.schemas.microsoft.com/authoring/2003/5#E/code and
					http://ddue.schemas.microsoft.com/authoring/2003/5#E/para elements.
					To allow new structural elements we have to extend the type
					http://ddue.schemas.microsoft.com/authoring/2003/5#T/sectionContentType.
				</p><p>
					Open the file <em>structure.xsd</em>, goto line 67 and add the <span class="code">any</span>
					element to the type:
				</p><div id="ID0EACAAAAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EACAAAAA_tabs"><div id="ID0EACAAAAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EACAAAAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EACAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EACAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">complexType</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"sectionContentType"</span> <span class="highlight-xml-attribute-name">mixed</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span> 
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">choice</span> <span class="highlight-xml-attribute-name">minOccurs</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span> <span class="highlight-xml-attribute-name">maxOccurs</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"unbounded"</span><span class="highlight-xml-bracket">&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">group</span> <span class="highlight-xml-attribute-name">ref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:structureGroup"</span><span class="highlight-xml-bracket">/&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">element</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"conditionalSection"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:conditionalSectionType"</span><span class="highlight-xml-bracket">/&gt;</span> 
        <span class="highlight-xml-comment">&lt;!-- PATCH HERE --&gt;</span> 
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">any</span> <span class="highlight-xml-attribute-name">namespace</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"##other"</span> <span class="highlight-xml-attribute-name">processContents</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"lax"</span> <span class="highlight-xml-bracket">/&gt;</span> 
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">choice</span><span class="highlight-xml-bracket">&gt;</span> 
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">attributeGroup</span> <span class="highlight-xml-attribute-name">ref</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"maml:contentIdentificationSharingAndConditionGroup"</span><span class="highlight-xml-bracket">/&gt;</span> 
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">complexType</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EACAAAAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;complexType name="sectionContentType" mixed="false"&gt; 
    &lt;choice minOccurs="0" maxOccurs="unbounded"&gt; 
        &lt;group ref="maml:structureGroup"/&gt; 
        &lt;element name="conditionalSection" type="maml:conditionalSectionType"/&gt; 
        &lt;!-- PATCH HERE --&gt; 
        &lt;any namespace="##other" processContents="lax" /&gt; 
    &lt;/choice&gt; 
    &lt;attributeGroup ref="maml:contentIdentificationSharingAndConditionGroup"/&gt; 
&lt;/complexType&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAAAA');</script><a name="seeAlsoSection"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="746fc19e-2670-440b-8277-a1ef7dc074d5.htm" target="">Visual Studio IntelliSense</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="http://SHFB.CodePlex.com" target="_blank">[v1.1.0.3] Sandcastle MAML Guide (http://SHFB.CodePlex.com)</a></p><div class="OH_feedbacklink"><a href="mailto:Eric@EWoodruff.us?subject=Sandcastle+MAML+Guide+Schema+Extensibility+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Eric Woodruff.</div></div><script src="//code.jquery.com/jquery-1.11.0.min.js"></script><script type="text/javascript">$(document).ready(function () {DocumentReady();});</script></body></html>