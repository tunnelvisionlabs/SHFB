<?xml version="1.0" encoding="utf-8"?>
<topic id="9fa3fe24-0a99-4332-a0ab-dd040b1f504f" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>Version 1.7.0.0 was released on June 2nd, 2008.</para>
      <autoOutline lead="none" excludeRelatedTopics="true" />
    </introduction>

<section address="Breaking">
  <title>Potential Breaking Changes</title>
  <content>
<list class="bullet">
    <listItem>The default configuration for all cached build components has changed.
They no longer store their cache files in the help file builder folder.
Instead, they store them in the <legacyBold>%APPDATA%\EWSoftware\Sandcastle Help File
Builder\Cache</legacyBold> folder.  This removes the need to run the help file builder as an
administrator under Vista x64 when using the cached build components.  If you
are using them, you <legacyUnderline><legacyBold>must</legacyBold></legacyUnderline> remove them from the project and re-add
them so that they pick up the new default configuration.  You can also delete
the cache files from the old location.  You can find them in the
<legacyBold>.\BuildComponents\Cache</legacyBold> folder under the main help file builder
installation folder.</listItem>

    <listItem>The default configuration for the <legacyBold>Cached Framework Comments Index
Data</legacyBold> custom build component has changed.  If you are using it, you
<legacyUnderline><legacyBold>must</legacyBold></legacyUnderline> remove it from the project and re-add it so that it picks
up the new default configuration.  You can also delete the
<legacyBold>Comments.cache</legacyBold> file as the naming method has changed and the old
version is obsolete.  You can find it in the <legacyBold>.\BuildComponents\Cache</legacyBold>
folder under the main help file builder installation folder or in the new
folder noted above if you moved the cache files.</listItem>

    <listItem>A new <codeInline>insertConceptual</codeInline> configuration option was added
to the build component definition configuration file.  It is used to define
a build component's placement within the <legacyBold>conceptual.config</legacyBold> file.  The
existing <codeInline>insert</codeInline> option will continue to be used for the reference
build configuration file (<legacyBold>sandcastle.config</legacyBold>).  If either element is
omitted from a component's definition, it will not be merged into the given
configuration file.</listItem>

    <listItem>Components defined in the project's <codeInline>ComponentConfigurations</codeInline>
property will be merged into the appropriate configuration files based on
the presence of the <codeInline>insert</codeInline> and <codeInline>insertConceptual</codeInline>
configuration elements.  As such, the settings will be shared and the
conceptual content will match the reference content in appearance.</listItem>

    <listItem>A distinction is now made between JScript and JavaScript in the code
colorizer to match the usage in Sandcastle.  JScript now has its own rule set
and is considered to be JScript.NET.  JavaScript is regular JavaScript.  Code
examples using "JScript" or one of its variants as the language will be
connected to the JScript language filter.  Code examples using "JavaScript" or
one of its variants as the language will be connected to the JavaScript
language filter.</listItem>

    <listItem>"XAML" has been added as a separate language in the code colorizer
rules so that it can be correctly connected to the XAML language filter.</listItem>

    <listItem>A bug in the standard <codeInline>ResolveConceptualLinksComponent</codeInline>
causes any specified inner text on <codeInline>&lt;link&gt;</codeInline> tags to be
ignored and instead it always uses the title.  I have reimplemented the
component to fix that bug and added a couple of new features (see below).  As
such, any links you may have in your conceptual content files will start
showing the inner text when built with the help file builder.  You may need to
review your documentation and either remove or update the inner text to
something more appropriate on your links.</listItem>
</list>

  </content>
</section>

<section address="NonBreaking">
  <title>Non-breaking Changes in Behavior</title>
  <content>
<list class="bullet">
    <listItem>The <codeInline>CachedCopyFromIndexComponent</codeInline> used for the comments
index now names its cache files after the language and framework version.</listItem>

    <listItem>Added a customized version of the JavaScript declaration syntax
generator component that will correctly document normal JavaScript.  It will
only convert the first letter of each member name to lowercase when
documenting a Script# project.  See the
<link xlink:href="8dcbb69b-7a1a-4049-8e6b-2bf344efbbc9" /> topic for
information about a modification to the <legacyBold>FixScriptSharp.xsl</legacyBold> file that
is needed in order to use the new syntax generator in a Script# project.</listItem>

    <listItem>The <codeInline>ShowMissingComponent</codeInline> messages are now localized.  The
messages appear in each of the <legacyBold>SharedBuilderContent_[lang].xml</legacyBold> files
in the help file builder's <legacyBold>.\SharedContent</legacyBold> folder.  The component also
inserts the "missing namespace" message as well rather than the build
process.  A <codeInline>contentFile</codeInline> configuration option was added to the
component that is used to specify the file containing the localized messages.
If omitted, it defaults to using the English message text.</listItem>

    <listItem>Due to a significant change in the way the language filters work in
the Hana and Prototype presentation styles, the
<codeInline>PostTransformComponent</codeInline> no longer connects examlpe code blocks to
the language filter in those presentation styles.  Given the way they are
implemented, this feature would be better handled in the transformations and
script files themselves.</listItem>
</list>
  
  </content>
</section>


<section address="ConceptualContent">
  <title>Conceptual Content Support</title>
  <content><para>An improved version of the <codeInline>ResolveConceptualLinksComponent</codeInline>
has been added with the following features and fixes:</para>

    <list class="bullet">
        <listItem>Broken links use the <legacyBold>None</legacyBold> style rather than the
<legacyBold>Index</legacyBold> style so that it is apparant that they do not work.</listItem>

        <listItem>The inner text from the conceptual link is used if specified. See
the <legacyBold>Potential Breaking Changes</legacyBold> section above as this may affect any
existing conceptual content that you have.</listItem>

        <listItem>On broken links, when the <codeInline>showBrokenLinkText</codeInline> option
is true and there is no inner text, the target value is displayed.</listItem>

        <listItem>Conceptual link targets can include an optional anchor name from
within the target such as "#Name" (i.e.
<codeInline>&lt;link xlink:href="3bdb6eb5-5e23-51c2-0051-3e224f82c201#Section2" /&gt;</codeInline>).</listItem>

        <listItem>Unnecessary whitespace is removed from the link text.</listItem>

        <listItem>If the companion file contains a <codeInline>&lt;linkText&gt;</codeInline>
element and no inner text is specified, its value will be used for the link
text rather than the title.  This allows for a shorter title or description to
use as the default link text.</listItem>
    </list>

  </content>
</section>

<section address="OtherChanges">
  <title>Other Changes in This Release</title>
  <content>
<list class="bullet">
    <listItem>The help for the standalone build components is now distributed as
a proper help file that includes the API documentation as well.</listItem>

    <listItem>Added support for the <codeInline>&lt;inheritdoc /&gt;</codeInline> XML comments
tag. See the <link xlink:href="79897974-ffc9-4b84-91a5-e50c66a0221d" /> topic in the help file for details.</listItem>

    <listItem>Added the <legacyBold>GenerateInheritedDocs.exe</legacyBold> tool to handle generation
of inherited documentation.</listItem>

    <listItem>Added a new <codeInline>keepSeeTags</codeInline> option to the <legacyBold>Code Block
Component</legacyBold> that allows <codeInline>&lt;see&gt;</codeInline> tags that appear within the
code to be passed through as-is so that they are rendered as clickable links
to the referenced help topic (project topics or online MSDN topics). This
option is also supported in additional content files on colorized
<codeInline>&lt;pre&gt;</codeInline> tags but will only resolve links to project help
topics.</listItem>

    <listItem>Added a new <codeInline>filter</codeInline> option to the <legacyBold>Code Block
Component</legacyBold> that allows you to specify whether or not a code block is
connected to the appropriate language filter.  If omitted or set to true,
it will be connected.  If set to false, it will not be connected.</listItem>

    <listItem>The attribute name <codeInline>language</codeInline> is now recognized by the
colorizer and the code block component as an acceptable alternative for the
<codeInline>lang</codeInline> attribute name.</listItem>

    <listItem>The <codeInline>CodeBlockComponent</codeInline> and <codeInline>PostTransformComponent</codeInline>
where reworked to allow their use in conceptual content builds.  This allows
code blocks in conceptual content files to be colorized using the same options
as in reference content builds.</listItem>

    <listItem>Added the <link xlink:href="85c08740-1190-471c-8fea-360a4a8e4612">MSHelpAttrComponent
build component </link> which is used to insert additional help attributes into the XML data island in
each generated API topic.  Support for this component is built into the help
file builder via the <codeInline>HelpAttributes</codeInline> project property.</listItem>

    <listItem>Fixed a bug in <codeInline>ShowMissingComponent</codeInline> that caused the link
in auto-documented constructors to point to the constructor topic rather than
the class topic.</listItem>

    <listItem>Updated the <codeInline>ShowMissingComponent</codeInline> so that it
auto-documents constructors on the class's member and overloads list pages as
well.</listItem>

    <listItem>Added the <codeInline>ShowMissingTypeParams</codeInline> configuration option to
the <codeInline>ShowMissingComponent</codeInline>.  When set to true (the default), it
will show a "missing" message if generic type or method type parameter
documentation is missing.</listItem>

    <listItem>Fixed a bug in the code colorizer rules for "//" style line comments
that contained a "/*" which was incorrectly interpretted as the start of a
block comment.</listItem>

    <listItem>The <codeInline>IntelliSenseComponent</codeInline>, <codeInline>PostTransformComponent</codeInline>,
and <codeInline>VersionInfoComponent</codeInline> were updated to handle multiple
assembly references in an API topic.</listItem>

    <listItem>Fixed a bug in the <codeInline>PostTransformComponent</codeInline> that caused the
VS2005 member list pages to be layed out incorrectly when using a logo and
the version builder's framework menu was present.</listItem>

    <listItem>Fixed a bug in the code colorizer rules for "//" style line comments
that contained a "/*" which was incorrectly interpretted as the start of a
block comment.</listItem>

    <listItem>Fixed the XML colorizer rules so that they recognize string literals
that span lines.</listItem>

    <listItem>The code block component and additional content files can now extract
commented regions from within XML, XAML, and SQL scripts.  Just surround the
snippet with comment lines containing <codeInline>#region</codeInline> and
<codeInline>#endregion</codeInline> markers.</listItem>

    <listItem>Added some more common problems and solutions to the FAQ.</listItem>

    <listItem>The entire project is now licensed using the
<link xlink:href="24504fda-d3ef-4dd9-8335-6db8b25d00f2">Microsoft Public License
(Ms-PL)</link> to match the license used by Sandcastle itself.</listItem>
</list>
  </content>
</section>

    <relatedTopics>
    <link xlink:href="9916374d-681f-4869-9b10-bb4a31161998" />
    </relatedTopics>

  </developerConceptualDocument>
</topic>
