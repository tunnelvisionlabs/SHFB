<configuration>
	<dduetools>
		<builder>
			<components>

				<!-- Create skeleton document -->
				<component id="Copy From File Component">
					<data file="%SHFBROOT%\PresentationStyles\Prototype\transforms\skeleton_conceptual.xml" />
					<copy source="/*" target="/" />
				</component>

				<!-- Copy in comments -->
				<component id="Copy From Index Component">
					<index name="comments" value="/topic" key="@id">
						<data files=".\DdueXml\*.xml" />
					</index>
					<copy name="comments" source="/topic" target="/document" />
				</component>

				<!-- Resolve tokens -->
				<component id="Shared Content Component">
					<context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
					<content file="%SHFBROOT%\Data\tokens.xml" />
					<replace elements="/*//ddue:token" item="string(.)" />
				</component>

				<!-- Copy in metadata keywords -->
				<component id="Copy From Files Component">
					<copy base=".\XmlComp" file="concat($key,'.cmp.xml')" source="/metadata/topic[@id=$key]/*"
						target="/document/metadata" />
				</component>

				<!-- Copy in metadata attributes -->
				<component id="Copy From Index Component">
					<index name="metadata" value="/metadata/topic" key="@id">
						<data files=".\ExtractedFiles\*.ContentMetadata.xml" />
					</index>
					<copy name="metadata" source="*" target="/document/metadata" />
					<copy name="metadata" key="string('*')" source="*" target="/document/metadata" />
				</component>

				<!-- Resolve code snippets -->
				<component id="Example Component">
					<examples file="%SHFBROOT%\Data\CodeSnippet.xml" />
					<colors language="VisualBasic">
						<color pattern="^\s*'[^\r\n]*" class="comment" />
						<color pattern="\&#34;.*\&#34;" class="literal" />
						<color pattern="\b((AddHandler)|(AddressOf)|(As)|(ByRef)|(ByVal)|(Case)|(Catch)|(Class)|(Const)|(Continue)|(Delegate)|(Dim)|(Each)|(Else)|(ElseIf)|(End)|(Enum)|(Event)|(Exit)|(False)|(Finally)|(For)|(Friend)|(Function)|(Get)|(Handles)|(Implements)|(Imports)|(In)|(Inherits)|(Interface)|(Is)|(Loop)|(Me)|(Module)|(MustInherit)|(MustOverride)|(MyBase)|(Namespace)|(New)|(Next)|(Nothing)|(NotInheritable)|(NotOverrideable)|(Of)|(Overloads)|(Overridable)|(Overrides)|(ParamArray)|(Partial)|(Private)|(Property)|(Protected)|(Public)|(RaiseEvent)|(ReadOnly)|(RemoveHandler)|(Set)|(Shadows)|(Shared)|(Static)|(Step)|(Structure)|(Sub)|(Then)|(Throw)|(To)|(True)|(Try)|(Until)|(Using)|(When)|(While)|(With)|(WriteOnly))\b" class="keyword" />
					</colors>
					<colors language="CSharp">
						<color pattern="/\*(.|\n)+?\*/" class="comment" />
						<color pattern="//[^\r\n]*" class="comment" />
						<color pattern="\&#34;.*\&#34;" class="literal" />
						<color pattern="\b((abstract)|(as)|(base)|(bool)|(break)|(case)|(catch)|(class)|(const)|(continue)|(default)|(delegate)|(do)|(else)|(enum)|(event)|(extern)|(false)|(finally)|(for)|(foreach)|(get)|(if)|(in)|(interface)|(internal)|(is)|(namespace)|(new)|(null)|(out)|(override)|(params)|(private)|(protected)|(public)|(readonly)|(ref)|(return)|(sealed)|(set)|(static)|(struct)|(switch)|(this)|(throw)|(true)|(try)|(typeof)|(using)|(virtual)|(volatile)|(void)|(while))\b" class="keyword" />
					</colors>
					<colors language="ManagedCPlusPlus">
						<color pattern="/\*(.|\n)+?\*/" class="comment" />
						<color pattern="//[^\r\n]*" class="comment" />
						<color pattern="\&#34;.*\&#34;" class="literal" />
						<color pattern="\b((abstract)|(array)|(break)|(case)|(catch)|(class)|(const)|(continue)|(delegate)|(delete)|(do)|(else)|(enum)|(event)|(extern)|(false)|(finally)|(for)|(friend)|(gcnew)|(generic)|(goto)|(if)|(initonly)|(inline)|(interface)|(literal)|(namespace)|(new)|(noinline)|(nullptr)|(operator)|(private)|(property)|(protected)|(public)|(ref)|(register)|(return)|(sealed)|(sizeof)|(static)|(struct)|(switch)|(template)|(this)|(throw)|(true)|(try)|(typedef)|(union)|(using)|(value)|(virtual)|(void)|(volatile)|(while))\b" class="keyword" />
					</colors>
				</component>

				<!-- Transform -->
				<component id="XS Transform Component">
					<transform file="%SHFBROOT%\PresentationStyles\Prototype\transforms\main_conceptual.xsl" >
						<argument key="metadata" value="true" />
						<argument key="languages">
							<language name="CSharp" style="cs" />
							<language name="VisualBasic" style="vb" />
							<language name="ManagedCPlusPlus" style="cpp" />
						</argument>
					</transform>
				</component>

				<!-- Resolve art links -->
				<component id="Resolve Art Links Component">
					<targets input="%SHFBROOT%\Data\ArtStore" baseOutput=".\Output" outputPath="string('media')"
						link="../media" map="%SHFBROOT%\Data\ArtSharedContent.loc.xml" />
				</component>

				<!-- Resolve shared content -->
				<component id="Shared Content Component">
					<content file="%SHFBROOT%\PresentationStyles\Prototype\content\shared_content.xml" />
					<content file="%SHFBROOT%\PresentationStyles\Prototype\content\conceptual_content.xml" />
				</component>

				<!-- Resolve conceptual links -->
				<component id="Resolve Conceptual Links Component">
					<targets base=".\XmlComp" type="local" />
					<targets base="%SHFBROOT%\Data\XmlComp" type="index"/>
				</component>

				<!-- Save the result -->
				<component id="Save Component">
					<save base=".\Output\html" path="concat($key,'.htm')" indent="true" omit-xml-declaration="true" />
				</component>

			</components>

		</builder>
	</dduetools>
</configuration>
