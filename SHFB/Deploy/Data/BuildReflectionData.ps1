<#
.SYNOPSIS
	Builds the Sandcastle Help File Builder reference reflection data.

.DESCRIPTION
	Builds the Sandcastle Help File Builder reference reflection data.

.PARAMETER NoClean
	When specified, the reflection data folder is not removed before generating new reflection data. Any existing files which are regenerated by the build will be overwritten.

.PARAMETER FrameworkPlatform
	Specifies the framework platform for the reflection data. The default is ".NETFramework".

.PARAMETER FrameworkVersion
	Specifies the framework version for the reflection data. The default is "4.5".

.NOTES
	Author: Sam Harwell
#>
param (
	[switch]$NoClean,
	[string]$FrameworkPlatform = '.NETFramework',
	[string]$FrameworkVersion = '4.5'
)

$SHFBROOT = $env:SHFBROOT

Try {
	$CommandDir = Split-Path -Parent $PSCommandPath

	$env:SHFBROOT = "$CommandDir\..\"
	$env:FrameworkPlatform = $FrameworkPlatform
	$env:FrameworkVersion = $FrameworkVersion
	$msbuild = "$env:windir\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe"

	$Framework = "$($FrameworkPlatform)_$($FrameworkVersion)"
	If ($Framework -eq '.NETPortable_4.6') {
		# Parsing the .NETPortable 4.6 assemblies causes a stack overflow due to type forwarding which MRefBuilder
		# doesn't appear to handle in this case.
		echo '*** The .NETPortable 4.6 Framework assemblies cannot be parsed.  Use another framework type.'
		echo '*'
		echo '* Build failed!'
		echo '*'
		exit 1
	}

	If (!($NoClean) -and (Test-Path "$CommandDir\Reflection")) {
		Write-Host "Removing files from existing output path: Reflection"
		Remove-Item "$CommandDir\Reflection" -Recurse
	}

	If (!($NoClean) -and (Test-Path "$CommandDir\$Framework")) {
		Write-Host "Removing files from existing intermediate output path: $Framework"
		Remove-Item "$CommandDir\$Framework" -Recurse
	}

	If (!(Test-Path "$CommandDir\Reflection"))
	{
		Write-Host "Creating target folder: Reflection"
		New-Item -ItemType directory "$CommandDir\Reflection" | Out-Null
	}

	&$msbuild 'BuildReflectionData.proj'
	if ($LASTEXITCODE -ne 0) {
		echo '*'
		echo '* Build failed!'
		echo '*'
		exit $LASTEXITCODE
	}

	Copy-Item "$CommandDir\$Framework\*.xml" -Recurse "$CommandDir\Reflection" -Force

	echo '*'
	echo '* The reflection data has been built successfully'
	echo '*'
}
finally {
	$env:SHFBROOT = $SHFBROOT
}
